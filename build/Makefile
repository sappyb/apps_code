# Makefile.in generated by automake 1.13.4 from Makefile.am.
# Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.








VPATH = ..
am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/codes
pkgincludedir = $(includedir)/codes
pkglibdir = $(libdir)/codes
pkglibexecdir = $(libexecdir)/codes
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
target_triplet = x86_64-unknown-linux-gnu
bin_PROGRAMS = src/workload/codes-workload-dump$(EXEEXT) \
	src/networks/model-net/topology-test$(EXEEXT) \
	src/network-workloads/model-net-mpi-replay$(EXEEXT) \
	src/network-workloads/model-net-dumpi-traces-dump$(EXEEXT) \
	src/network-workloads/model-net-synthetic$(EXEEXT) \
	src/network-workloads/model-net-synthetic-slimfly$(EXEEXT) \
	src/network-workloads/model-net-synthetic-fattree$(EXEEXT) \
	src/network-workloads/model-net-synthetic-dragonfly-all$(EXEEXT) \
	src/network-workloads/archived/model-net-synthetic-custom-dfly$(EXEEXT) \
	src/network-workloads/archived/model-net-synthetic-dfly-plus$(EXEEXT) \
	src/network-workloads/archived/model-net-synthetic-dally-dfly$(EXEEXT) \
	doc/example/tutorial-synthetic-ping-pong$(EXEEXT)
noinst_PROGRAMS = doc/example/example$(EXEEXT) \
	doc/example_heterogeneous/example$(EXEEXT)
TESTS = tests/lp-io-test.sh tests/workload/codes-workload-test.sh \
	tests/mapping_test.sh tests/lsm-test.sh \
	tests/rc-stack-test$(EXEEXT) tests/resource-test.sh \
	tests/jobmap-test.sh tests/map-ctx-test.sh \
	tests/modelnet-test.sh tests/modelnet-test-torus.sh \
	tests/modelnet-test-loggp.sh tests/modelnet-test-dragonfly.sh \
	tests/modelnet-test-em.sh tests/modelnet-test-slimfly.sh \
	tests/modelnet-test-dragonfly-synthetic.sh \
	tests/modelnet-test-dragonfly-custom-synthetic.sh \
	tests/modelnet-test-dragonfly-plus-synthetic.sh \
	tests/modelnet-test-dragonfly-dally-synthetic.sh \
	tests/modelnet-test-fattree-synthetic.sh \
	tests/modelnet-test-slimfly-synthetic.sh \
	tests/modelnet-p2p-bw-loggp.sh \
	tests/modelnet-prio-sched-test.sh $(am__append_7) \
	$(am__append_15)
check_PROGRAMS = src/util/templates/lp_template_dummy_main$(EXEEXT) \
	tests/lp-io-test$(EXEEXT) \
	tests/workload/codes-workload-test$(EXEEXT) \
	tests/workload/codes-workload-mpi-replay$(EXEEXT) \
	tests/mapping_test$(EXEEXT) tests/lsm-test$(EXEEXT) \
	tests/resource-test$(EXEEXT) tests/rc-stack-test$(EXEEXT) \
	tests/jobmap-test$(EXEEXT) tests/map-ctx-test$(EXEEXT) \
	tests/modelnet-test$(EXEEXT) tests/modelnet-p2p-bw$(EXEEXT) \
	src/network-workloads/model-net-synthetic$(EXEEXT) \
	src/network-workloads/model-net-synthetic-fattree$(EXEEXT) \
	src/network-workloads/model-net-synthetic-slimfly$(EXEEXT) \
	src/network-workloads/model-net-synthetic-custom-dfly$(EXEEXT) \
	src/network-workloads/model-net-synthetic-dfly-plus$(EXEEXT) \
	src/network-workloads/model-net-synthetic-dally-dfly$(EXEEXT) \
	src/network-workloads/model-net-mpi-replay$(EXEEXT) \
	tests/concurrent-msg-recv$(EXEEXT) \
	tests/modelnet-simplep2p-test$(EXEEXT) \
	tests/modelnet-test-collective$(EXEEXT) \
	tests/modelnet-prio-sched-test$(EXEEXT) \
	tests/modelnet-test-dragonfly$(EXEEXT) $(am__EXEEXT_1)
EXTRA_PROGRAMS =
DIST_COMMON = $(srcdir)/Make.rules \
	$(top_srcdir)/scripts/Makefile.subdir \
	$(top_srcdir)/src/Makefile.subdir \
	$(top_srcdir)/tests/Makefile.subdir \
	$(top_srcdir)/doc/Makefile.subdir $(srcdir)/Makefile.in \
	$(srcdir)/Makefile.am $(top_srcdir)/configure \
	$(am__configure_deps) $(srcdir)/codes_config.h.in \
	$(top_srcdir)/maint/codes.pc.in \
	$(top_srcdir)/src/network-workloads/conf/dragonfly-custom/modelnet-test-dragonfly-1728-nodes.conf.in \
	$(top_srcdir)/src/network-workloads/conf/dragonfly-plus/modelnet-test-dragonfly-plus.conf.in \
	$(top_srcdir)/src/network-workloads/conf/dragonfly-dally/modelnet-test-dragonfly-dally.conf.in \
	$(top_srcdir)/doc/example/tutorial-ping-pong.conf.in depcomp \
	$(nobase_include_HEADERS) $(noinst_HEADERS) test-driver \
	compile config.guess config.sub install-sh missing ltmain.sh
#am__append_1 = -g
#am__append_2 = -g
#am__append_3 = -g
#am__append_4 = ${DARSHAN_CFLAGS} -DUSE_DARSHAN=1
#am__append_5 = src/workload/methods/codes-darshan3-io-wrkld.c
#am__append_6 = ${DARSHAN_LIBS}
#am__append_7 = tests/workload/darshan-dump.sh
am__append_8 = ${RECORDER_CPPFLAGS}
am__append_9 = src/workload/methods/codes-recorder-io-wrkld.c
am__append_10 = ${ARGOBOTS_CFLAGS} ${SWM_CFLAGS} -DUSE_ONLINE=1
am__append_11 = ${SWM_LIBS} ${ARGOBOTS_LIBS}
am__append_12 = src/workload/methods/codes-online-comm-wrkld.C
#am__append_13 = ${DUMPI_CFLAGS} -DUSE_DUMPI=1
#am__append_14 = src/workload/methods/codes-dumpi-trace-nw-wrkld.c
#am__append_15 = tests/modelnet-test-dragonfly-traces.sh \
#		 tests/modelnet-test-dragonfly-custom-traces.sh \
#		 tests/modelnet-test-slimfly-traces.sh	\
#		 tests/modelnet-test-torus-traces.sh

#am__append_16 = src/network-workloads/model-net-mpi-replay
####am__append_17 = ${CORTEX_PYTHON_CFLAGS} \
####	-DENABLE_CORTEX_PYTHON=1 \
####	${PYTHON_CFLAGS}
####am__append_18 = ${CORTEX_PYTHON_LIBS} \
####	${PYTHON_LIBS}
##am__append_19 = ${CORTEX_CFLAGS} -DENABLE_CORTEX=1
##am__append_20 = ${CORTEX_LIBS}
#am__append_21 = ${DUMPI_LIBS}
#am__append_22 = ${ROSS_Damaris_CFLAGS} -DUSE_RDAMARIS=1
#am__append_23 = ${ROSS_Damaris_LIBS}
subdir = .
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_check_compile_flag.m4 \
	$(top_srcdir)/m4/ax_compare_version.m4 \
	$(top_srcdir)/m4/ax_cxx_compile_stdcxx.m4 \
	$(top_srcdir)/m4/ax_prog_bison.m4 \
	$(top_srcdir)/m4/ax_prog_bison_clfeatures.m4 \
	$(top_srcdir)/m4/ax_prog_flex.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/m4_ax_boost_base.m4 $(top_srcdir)/m4/pkg.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = codes_config.h
CONFIG_CLEAN_FILES = maint/codes.pc \
	src/network-workloads/conf/dragonfly-custom/modelnet-test-dragonfly-1728-nodes.conf \
	src/network-workloads/conf/dragonfly-plus/modelnet-test-dragonfly-plus.conf \
	src/network-workloads/conf/dragonfly-dally/modelnet-test-dragonfly-dally.conf \
	doc/example/tutorial-ping-pong.conf tests/conf
CONFIG_CLEAN_VPATH_FILES =
LIBRARIES = $(noinst_LIBRARIES)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(bindir)" "$(DESTDIR)$(pkgconfigdir)" \
	"$(DESTDIR)$(includedir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
src_libcodes_la_LIBADD =
am__src_libcodes_la_SOURCES_DIST = src/iokernellang/codesparser.h \
	src/iokernellang/codesparser.c src/iokernellang/codeslexer.h \
	src/iokernellang/codeslexer.c src/iokernellang/codesImpl.c \
	src/iokernellang/CodesIOKernelContext.h \
	src/iokernellang/CodesIOKernelParser.h \
	src/iokernellang/CodesIOKernelTypes.h \
	src/iokernellang/CodesKernelHelpers.h \
	src/iokernellang/CodesKernelHelpers.c \
	src/modelconfig/configlex.c src/modelconfig/configlex.h \
	src/modelconfig/configparser.c src/modelconfig/configparser.h \
	src/modelconfig/configfile.c src/modelconfig/configglue.h \
	src/modelconfig/configglue.c src/modelconfig/configstore.h \
	src/modelconfig/configstore.c \
	src/modelconfig/configstoreadapter.h \
	src/modelconfig/configstoreadapter.c \
	src/modelconfig/txt_configfile.h \
	src/modelconfig/txt_configfile.c \
	src/modelconfig/configuration.c src/util/codes_mapping.c \
	src/util/lp-type-lookup.c src/util/lp-io.c src/util/lp-msg.c \
	src/util/lookup3.c src/util/resource.c src/util/resource-lp.c \
	src/util/local-storage-model.c \
	src/util/codes-jobmap-method-impl.h src/util/codes-jobmap.c \
	src/util/jobmap-impl/jobmap-dummy.c \
	src/util/jobmap-impl/jobmap-list.c \
	src/util/jobmap-impl/jobmap-identity.c \
	src/util/codes-mapping-context.c src/util/codes-comm.c \
	src/util/connection-manager.C src/workload/codes-workload.c \
	src/workload/methods/codes-iolang-wrkld.c \
	src/workload/methods/codes-checkpoint-wrkld.c \
	src/workload/methods/test-workload-method.c \
	src/workload/methods/codes-iomock-wrkld.c codes/rc-stack.h \
	src/util/rc-stack.c src/networks/model-net/core/model-net.c \
	src/networks/model-net/common-net.c \
	src/networks/model-net/simplenet-upd.c \
	src/networks/model-net/torus.c \
	src/networks/model-net/express-mesh.C \
	src/networks/model-net/dragonfly.c \
	src/networks/model-net/dragonfly-custom.C \
	src/networks/model-net/dragonfly-plus.C \
	src/networks/model-net/dragonfly-dally.C \
	src/networks/model-net/slimfly.c \
	src/networks/model-net/fattree.c \
	src/networks/model-net/loggp.c \
	src/networks/model-net/simplep2p.c \
	src/networks/model-net/core/model-net-lp.c \
	src/networks/model-net/core/model-net-sched.c \
	src/networks/model-net/core/model-net-sched-impl.c \
	src/workload/methods/codes-darshan3-io-wrkld.c \
	src/workload/methods/codes-recorder-io-wrkld.c \
	src/workload/methods/codes-online-comm-wrkld.C \
	src/workload/methods/codes-dumpi-trace-nw-wrkld.c
am__dirstamp = $(am__leading_dot)dirstamp
#am__objects_1 = src/workload/methods/codes-darshan3-io-wrkld.lo
am__objects_2 = src/workload/methods/codes-recorder-io-wrkld.lo
am__objects_3 = src/workload/methods/codes-online-comm-wrkld.lo
#am__objects_4 = src/workload/methods/codes-dumpi-trace-nw-wrkld.lo
am_src_libcodes_la_OBJECTS = src/iokernellang/codesparser.lo \
	src/iokernellang/codeslexer.lo src/iokernellang/codesImpl.lo \
	src/iokernellang/CodesKernelHelpers.lo \
	src/modelconfig/configlex.lo src/modelconfig/configparser.lo \
	src/modelconfig/configfile.lo src/modelconfig/configglue.lo \
	src/modelconfig/configstore.lo \
	src/modelconfig/configstoreadapter.lo \
	src/modelconfig/txt_configfile.lo \
	src/modelconfig/configuration.lo src/util/codes_mapping.lo \
	src/util/lp-type-lookup.lo src/util/lp-io.lo \
	src/util/lp-msg.lo src/util/lookup3.lo src/util/resource.lo \
	src/util/resource-lp.lo src/util/local-storage-model.lo \
	src/util/codes-jobmap.lo src/util/jobmap-impl/jobmap-dummy.lo \
	src/util/jobmap-impl/jobmap-list.lo \
	src/util/jobmap-impl/jobmap-identity.lo \
	src/util/codes-mapping-context.lo src/util/codes-comm.lo \
	src/util/connection-manager.lo src/workload/codes-workload.lo \
	src/workload/methods/codes-iolang-wrkld.lo \
	src/workload/methods/codes-checkpoint-wrkld.lo \
	src/workload/methods/test-workload-method.lo \
	src/workload/methods/codes-iomock-wrkld.lo \
	src/util/rc-stack.lo src/networks/model-net/core/model-net.lo \
	src/networks/model-net/common-net.lo \
	src/networks/model-net/simplenet-upd.lo \
	src/networks/model-net/torus.lo \
	src/networks/model-net/express-mesh.lo \
	src/networks/model-net/dragonfly.lo \
	src/networks/model-net/dragonfly-custom.lo \
	src/networks/model-net/dragonfly-plus.lo \
	src/networks/model-net/dragonfly-dally.lo \
	src/networks/model-net/slimfly.lo \
	src/networks/model-net/fattree.lo \
	src/networks/model-net/loggp.lo \
	src/networks/model-net/simplep2p.lo \
	src/networks/model-net/core/model-net-lp.lo \
	src/networks/model-net/core/model-net-sched.lo \
	src/networks/model-net/core/model-net-sched-impl.lo \
	$(am__objects_1) $(am__objects_2) $(am__objects_3) \
	$(am__objects_4)
src_libcodes_la_OBJECTS = $(am_src_libcodes_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
src_libcodes_mpi_replay_la_LIBADD =
am_src_libcodes_mpi_replay_la_OBJECTS =  \
	src/network-workloads/model-net-mpi-replay.lo
src_libcodes_mpi_replay_la_OBJECTS =  \
	$(am_src_libcodes_mpi_replay_la_OBJECTS)
#am__EXEEXT_1 = src/network-workloads/model-net-mpi-replay$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS)
am_doc_example_example_OBJECTS = doc/example/example.$(OBJEXT)
doc_example_example_OBJECTS = $(am_doc_example_example_OBJECTS)
doc_example_example_LDADD = $(LDADD)
am__DEPENDENCIES_1 =
#am__DEPENDENCIES_2 = $(am__DEPENDENCIES_1)
am__DEPENDENCIES_3 = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
####am__DEPENDENCIES_4 = $(am__DEPENDENCIES_1) \
####	$(am__DEPENDENCIES_1)
##am__DEPENDENCIES_5 =  \
##	$(am__DEPENDENCIES_1)
#am__DEPENDENCIES_6 = $(am__DEPENDENCIES_1)
#am__DEPENDENCIES_7 = $(am__DEPENDENCIES_1)
doc_example_example_DEPENDENCIES = $(lib_LTLIBRARIES) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_6) \
	$(am__DEPENDENCIES_7)
am_doc_example_tutorial_synthetic_ping_pong_OBJECTS =  \
	doc/example/tutorial-synthetic-ping-pong.$(OBJEXT)
doc_example_tutorial_synthetic_ping_pong_OBJECTS =  \
	$(am_doc_example_tutorial_synthetic_ping_pong_OBJECTS)
doc_example_tutorial_synthetic_ping_pong_LDADD = $(LDADD)
doc_example_tutorial_synthetic_ping_pong_DEPENDENCIES =  \
	$(lib_LTLIBRARIES) $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_6) \
	$(am__DEPENDENCIES_7)
am_doc_example_heterogeneous_example_OBJECTS =  \
	doc/example_heterogeneous/example.$(OBJEXT)
doc_example_heterogeneous_example_OBJECTS =  \
	$(am_doc_example_heterogeneous_example_OBJECTS)
doc_example_heterogeneous_example_LDADD = $(LDADD)
doc_example_heterogeneous_example_DEPENDENCIES = $(lib_LTLIBRARIES) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_6) \
	$(am__DEPENDENCIES_7)
src_network_workloads_archived_model_net_synthetic_custom_dfly_SOURCES = src/network-workloads/archived/model-net-synthetic-custom-dfly.c
src_network_workloads_archived_model_net_synthetic_custom_dfly_OBJECTS = src/network-workloads/archived/model-net-synthetic-custom-dfly.$(OBJEXT)
src_network_workloads_archived_model_net_synthetic_custom_dfly_LDADD =  \
	$(LDADD)
src_network_workloads_archived_model_net_synthetic_custom_dfly_DEPENDENCIES =  \
	$(lib_LTLIBRARIES) $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_6) \
	$(am__DEPENDENCIES_7)
src_network_workloads_archived_model_net_synthetic_dally_dfly_SOURCES = src/network-workloads/archived/model-net-synthetic-dally-dfly.c
src_network_workloads_archived_model_net_synthetic_dally_dfly_OBJECTS = src/network-workloads/archived/model-net-synthetic-dally-dfly.$(OBJEXT)
src_network_workloads_archived_model_net_synthetic_dally_dfly_LDADD =  \
	$(LDADD)
src_network_workloads_archived_model_net_synthetic_dally_dfly_DEPENDENCIES =  \
	$(lib_LTLIBRARIES) $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_6) \
	$(am__DEPENDENCIES_7)
src_network_workloads_archived_model_net_synthetic_dfly_plus_SOURCES = src/network-workloads/archived/model-net-synthetic-dfly-plus.c
src_network_workloads_archived_model_net_synthetic_dfly_plus_OBJECTS = src/network-workloads/archived/model-net-synthetic-dfly-plus.$(OBJEXT)
src_network_workloads_archived_model_net_synthetic_dfly_plus_LDADD =  \
	$(LDADD)
src_network_workloads_archived_model_net_synthetic_dfly_plus_DEPENDENCIES =  \
	$(lib_LTLIBRARIES) $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_6) \
	$(am__DEPENDENCIES_7)
am_src_network_workloads_model_net_dumpi_traces_dump_OBJECTS =  \
	src/network-workloads/model-net-dumpi-traces-dump.$(OBJEXT)
src_network_workloads_model_net_dumpi_traces_dump_OBJECTS = $(am_src_network_workloads_model_net_dumpi_traces_dump_OBJECTS)
src_network_workloads_model_net_dumpi_traces_dump_LDADD = $(LDADD)
src_network_workloads_model_net_dumpi_traces_dump_DEPENDENCIES =  \
	$(lib_LTLIBRARIES) $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_6) \
	$(am__DEPENDENCIES_7)
am_src_network_workloads_model_net_mpi_replay_OBJECTS = src/network-workloads/src_network_workloads_model_net_mpi_replay-model-net-mpi-replay.$(OBJEXT) \
	src/network-workloads/src_network_workloads_model_net_mpi_replay-model-net-mpi-replay-main.$(OBJEXT)
src_network_workloads_model_net_mpi_replay_OBJECTS =  \
	$(am_src_network_workloads_model_net_mpi_replay_OBJECTS)
src_network_workloads_model_net_mpi_replay_LDADD = $(LDADD)
src_network_workloads_model_net_mpi_replay_DEPENDENCIES =  \
	$(lib_LTLIBRARIES) $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_6) \
	$(am__DEPENDENCIES_7)
src_network_workloads_model_net_mpi_replay_LINK = $(LIBTOOL) \
	$(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) \
	$(src_network_workloads_model_net_mpi_replay_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_src_network_workloads_model_net_synthetic_OBJECTS =  \
	src/network-workloads/model-net-synthetic.$(OBJEXT)
src_network_workloads_model_net_synthetic_OBJECTS =  \
	$(am_src_network_workloads_model_net_synthetic_OBJECTS)
src_network_workloads_model_net_synthetic_LDADD = $(LDADD)
src_network_workloads_model_net_synthetic_DEPENDENCIES =  \
	$(lib_LTLIBRARIES) $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_6) \
	$(am__DEPENDENCIES_7)
am_src_network_workloads_model_net_synthetic_custom_dfly_OBJECTS = src/network-workloads/archived/model-net-synthetic-custom-dfly.$(OBJEXT)
src_network_workloads_model_net_synthetic_custom_dfly_OBJECTS = $(am_src_network_workloads_model_net_synthetic_custom_dfly_OBJECTS)
src_network_workloads_model_net_synthetic_custom_dfly_LDADD =  \
	$(LDADD)
src_network_workloads_model_net_synthetic_custom_dfly_DEPENDENCIES =  \
	$(lib_LTLIBRARIES) $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_6) \
	$(am__DEPENDENCIES_7)
am_src_network_workloads_model_net_synthetic_dally_dfly_OBJECTS = src/network-workloads/archived/model-net-synthetic-dally-dfly.$(OBJEXT)
src_network_workloads_model_net_synthetic_dally_dfly_OBJECTS = $(am_src_network_workloads_model_net_synthetic_dally_dfly_OBJECTS)
src_network_workloads_model_net_synthetic_dally_dfly_LDADD = $(LDADD)
src_network_workloads_model_net_synthetic_dally_dfly_DEPENDENCIES =  \
	$(lib_LTLIBRARIES) $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_6) \
	$(am__DEPENDENCIES_7)
am_src_network_workloads_model_net_synthetic_dfly_plus_OBJECTS = src/network-workloads/archived/model-net-synthetic-dfly-plus.$(OBJEXT)
src_network_workloads_model_net_synthetic_dfly_plus_OBJECTS = $(am_src_network_workloads_model_net_synthetic_dfly_plus_OBJECTS)
src_network_workloads_model_net_synthetic_dfly_plus_LDADD = $(LDADD)
src_network_workloads_model_net_synthetic_dfly_plus_DEPENDENCIES =  \
	$(lib_LTLIBRARIES) $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_6) \
	$(am__DEPENDENCIES_7)
am_src_network_workloads_model_net_synthetic_dragonfly_all_OBJECTS = src/network-workloads/model-net-synthetic-dragonfly-all.$(OBJEXT)
src_network_workloads_model_net_synthetic_dragonfly_all_OBJECTS = $(am_src_network_workloads_model_net_synthetic_dragonfly_all_OBJECTS)
src_network_workloads_model_net_synthetic_dragonfly_all_LDADD =  \
	$(LDADD)
src_network_workloads_model_net_synthetic_dragonfly_all_DEPENDENCIES =  \
	$(lib_LTLIBRARIES) $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_6) \
	$(am__DEPENDENCIES_7)
src_network_workloads_model_net_synthetic_fattree_SOURCES =  \
	src/network-workloads/model-net-synthetic-fattree.c
src_network_workloads_model_net_synthetic_fattree_OBJECTS =  \
	src/network-workloads/model-net-synthetic-fattree.$(OBJEXT)
src_network_workloads_model_net_synthetic_fattree_LDADD = $(LDADD)
src_network_workloads_model_net_synthetic_fattree_DEPENDENCIES =  \
	$(lib_LTLIBRARIES) $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_6) \
	$(am__DEPENDENCIES_7)
am_src_network_workloads_model_net_synthetic_slimfly_OBJECTS =  \
	src/network-workloads/model-net-synthetic-slimfly.$(OBJEXT)
src_network_workloads_model_net_synthetic_slimfly_OBJECTS = $(am_src_network_workloads_model_net_synthetic_slimfly_OBJECTS)
src_network_workloads_model_net_synthetic_slimfly_LDADD = $(LDADD)
src_network_workloads_model_net_synthetic_slimfly_DEPENDENCIES =  \
	$(lib_LTLIBRARIES) $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_6) \
	$(am__DEPENDENCIES_7)
am_src_networks_model_net_topology_test_OBJECTS =  \
	src/networks/model-net/topology-test.$(OBJEXT)
src_networks_model_net_topology_test_OBJECTS =  \
	$(am_src_networks_model_net_topology_test_OBJECTS)
src_networks_model_net_topology_test_LDADD = $(LDADD)
src_networks_model_net_topology_test_DEPENDENCIES =  \
	$(lib_LTLIBRARIES) $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_6) \
	$(am__DEPENDENCIES_7)
am_src_util_templates_lp_template_dummy_main_OBJECTS =  \
	src/util/templates/lp_template_dummy_main.$(OBJEXT) \
	src/util/templates/lp_template.$(OBJEXT)
src_util_templates_lp_template_dummy_main_OBJECTS =  \
	$(am_src_util_templates_lp_template_dummy_main_OBJECTS)
src_util_templates_lp_template_dummy_main_LDADD = $(LDADD)
src_util_templates_lp_template_dummy_main_DEPENDENCIES =  \
	$(lib_LTLIBRARIES) $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_6) \
	$(am__DEPENDENCIES_7)
am_src_workload_codes_workload_dump_OBJECTS =  \
	src/workload/codes-workload-dump.$(OBJEXT)
src_workload_codes_workload_dump_OBJECTS =  \
	$(am_src_workload_codes_workload_dump_OBJECTS)
src_workload_codes_workload_dump_LDADD = $(LDADD)
src_workload_codes_workload_dump_DEPENDENCIES = $(lib_LTLIBRARIES) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_6) \
	$(am__DEPENDENCIES_7)
am_tests_concurrent_msg_recv_OBJECTS =  \
	tests/concurrent-msg-recv.$(OBJEXT)
tests_concurrent_msg_recv_OBJECTS =  \
	$(am_tests_concurrent_msg_recv_OBJECTS)
tests_concurrent_msg_recv_LDADD = $(LDADD)
tests_concurrent_msg_recv_DEPENDENCIES = $(lib_LTLIBRARIES) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_6) \
	$(am__DEPENDENCIES_7)
am_tests_jobmap_test_OBJECTS = tests/jobmap-test.$(OBJEXT)
tests_jobmap_test_OBJECTS = $(am_tests_jobmap_test_OBJECTS)
tests_jobmap_test_LDADD = $(LDADD)
tests_jobmap_test_DEPENDENCIES = $(lib_LTLIBRARIES) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_6) \
	$(am__DEPENDENCIES_7)
am_tests_lp_io_test_OBJECTS = tests/lp-io-test.$(OBJEXT)
tests_lp_io_test_OBJECTS = $(am_tests_lp_io_test_OBJECTS)
tests_lp_io_test_LDADD = $(LDADD)
tests_lp_io_test_DEPENDENCIES = $(lib_LTLIBRARIES) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_6) \
	$(am__DEPENDENCIES_7)
am_tests_lsm_test_OBJECTS = tests/local-storage-model-test.$(OBJEXT)
tests_lsm_test_OBJECTS = $(am_tests_lsm_test_OBJECTS)
tests_lsm_test_LDADD = $(LDADD)
tests_lsm_test_DEPENDENCIES = $(lib_LTLIBRARIES) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_4) $(am__DEPENDENCIES_5) \
	$(am__DEPENDENCIES_6) $(am__DEPENDENCIES_7)
am_tests_map_ctx_test_OBJECTS = tests/map-ctx-test.$(OBJEXT)
tests_map_ctx_test_OBJECTS = $(am_tests_map_ctx_test_OBJECTS)
tests_map_ctx_test_LDADD = $(LDADD)
tests_map_ctx_test_DEPENDENCIES = $(lib_LTLIBRARIES) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_6) \
	$(am__DEPENDENCIES_7)
am_tests_mapping_test_OBJECTS = tests/mapping_test.$(OBJEXT)
tests_mapping_test_OBJECTS = $(am_tests_mapping_test_OBJECTS)
tests_mapping_test_LDADD = $(LDADD)
tests_mapping_test_DEPENDENCIES = $(lib_LTLIBRARIES) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_6) \
	$(am__DEPENDENCIES_7)
am_tests_modelnet_p2p_bw_OBJECTS = tests/modelnet-p2p-bw.$(OBJEXT)
tests_modelnet_p2p_bw_OBJECTS = $(am_tests_modelnet_p2p_bw_OBJECTS)
tests_modelnet_p2p_bw_LDADD = $(LDADD)
tests_modelnet_p2p_bw_DEPENDENCIES = $(lib_LTLIBRARIES) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_6) \
	$(am__DEPENDENCIES_7)
am_tests_modelnet_prio_sched_test_OBJECTS =  \
	tests/modelnet-prio-sched-test.$(OBJEXT)
tests_modelnet_prio_sched_test_OBJECTS =  \
	$(am_tests_modelnet_prio_sched_test_OBJECTS)
tests_modelnet_prio_sched_test_LDADD = $(LDADD)
tests_modelnet_prio_sched_test_DEPENDENCIES = $(lib_LTLIBRARIES) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_6) \
	$(am__DEPENDENCIES_7)
am_tests_modelnet_simplep2p_test_OBJECTS =  \
	tests/modelnet-simplep2p-test.$(OBJEXT)
tests_modelnet_simplep2p_test_OBJECTS =  \
	$(am_tests_modelnet_simplep2p_test_OBJECTS)
tests_modelnet_simplep2p_test_LDADD = $(LDADD)
tests_modelnet_simplep2p_test_DEPENDENCIES = $(lib_LTLIBRARIES) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_6) \
	$(am__DEPENDENCIES_7)
am_tests_modelnet_test_OBJECTS = tests/modelnet-test.$(OBJEXT)
tests_modelnet_test_OBJECTS = $(am_tests_modelnet_test_OBJECTS)
tests_modelnet_test_LDADD = $(LDADD)
tests_modelnet_test_DEPENDENCIES = $(lib_LTLIBRARIES) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_6) \
	$(am__DEPENDENCIES_7)
am_tests_modelnet_test_collective_OBJECTS =  \
	tests/modelnet-test-collective.$(OBJEXT)
tests_modelnet_test_collective_OBJECTS =  \
	$(am_tests_modelnet_test_collective_OBJECTS)
tests_modelnet_test_collective_LDADD = $(LDADD)
tests_modelnet_test_collective_DEPENDENCIES = $(lib_LTLIBRARIES) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_6) \
	$(am__DEPENDENCIES_7)
am_tests_modelnet_test_dragonfly_OBJECTS =  \
	tests/modelnet-test-dragonfly.$(OBJEXT)
tests_modelnet_test_dragonfly_OBJECTS =  \
	$(am_tests_modelnet_test_dragonfly_OBJECTS)
tests_modelnet_test_dragonfly_LDADD = $(LDADD)
tests_modelnet_test_dragonfly_DEPENDENCIES = $(lib_LTLIBRARIES) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_6) \
	$(am__DEPENDENCIES_7)
am_tests_rc_stack_test_OBJECTS = tests/rc-stack-test.$(OBJEXT)
tests_rc_stack_test_OBJECTS = $(am_tests_rc_stack_test_OBJECTS)
tests_rc_stack_test_LDADD = $(LDADD)
tests_rc_stack_test_DEPENDENCIES = $(lib_LTLIBRARIES) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_6) \
	$(am__DEPENDENCIES_7)
am_tests_resource_test_OBJECTS = tests/resource-test.$(OBJEXT)
tests_resource_test_OBJECTS = $(am_tests_resource_test_OBJECTS)
tests_resource_test_LDADD = $(LDADD)
tests_resource_test_DEPENDENCIES = $(lib_LTLIBRARIES) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_6) \
	$(am__DEPENDENCIES_7)
am_tests_workload_codes_workload_mpi_replay_OBJECTS =  \
	tests/workload/codes-workload-mpi-replay.$(OBJEXT)
tests_workload_codes_workload_mpi_replay_OBJECTS =  \
	$(am_tests_workload_codes_workload_mpi_replay_OBJECTS)
tests_workload_codes_workload_mpi_replay_LDADD = $(LDADD)
tests_workload_codes_workload_mpi_replay_DEPENDENCIES =  \
	$(lib_LTLIBRARIES) $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_6) \
	$(am__DEPENDENCIES_7)
am_tests_workload_codes_workload_test_OBJECTS =  \
	tests/workload/codes-workload-test.$(OBJEXT) \
	tests/workload/codes-workload-test-svr-lp.$(OBJEXT) \
	tests/workload/codes-workload-test-cn-lp.$(OBJEXT)
tests_workload_codes_workload_test_OBJECTS =  \
	$(am_tests_workload_codes_workload_test_OBJECTS)
tests_workload_codes_workload_test_LDADD = $(LDADD)
tests_workload_codes_workload_test_DEPENDENCIES = $(lib_LTLIBRARIES) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_6) \
	$(am__DEPENDENCIES_7)
SCRIPTS = $(bin_SCRIPTS)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(srcdir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(src_libcodes_la_SOURCES) \
	$(src_libcodes_mpi_replay_la_SOURCES) \
	$(doc_example_example_SOURCES) \
	$(doc_example_tutorial_synthetic_ping_pong_SOURCES) \
	$(doc_example_heterogeneous_example_SOURCES) \
	src/network-workloads/archived/model-net-synthetic-custom-dfly.c \
	src/network-workloads/archived/model-net-synthetic-dally-dfly.c \
	src/network-workloads/archived/model-net-synthetic-dfly-plus.c \
	$(src_network_workloads_model_net_dumpi_traces_dump_SOURCES) \
	$(src_network_workloads_model_net_mpi_replay_SOURCES) \
	$(src_network_workloads_model_net_synthetic_SOURCES) \
	$(src_network_workloads_model_net_synthetic_custom_dfly_SOURCES) \
	$(src_network_workloads_model_net_synthetic_dally_dfly_SOURCES) \
	$(src_network_workloads_model_net_synthetic_dfly_plus_SOURCES) \
	$(src_network_workloads_model_net_synthetic_dragonfly_all_SOURCES) \
	src/network-workloads/model-net-synthetic-fattree.c \
	$(src_network_workloads_model_net_synthetic_slimfly_SOURCES) \
	$(src_networks_model_net_topology_test_SOURCES) \
	$(src_util_templates_lp_template_dummy_main_SOURCES) \
	$(src_workload_codes_workload_dump_SOURCES) \
	$(tests_concurrent_msg_recv_SOURCES) \
	$(tests_jobmap_test_SOURCES) $(tests_lp_io_test_SOURCES) \
	$(tests_lsm_test_SOURCES) $(tests_map_ctx_test_SOURCES) \
	$(tests_mapping_test_SOURCES) $(tests_modelnet_p2p_bw_SOURCES) \
	$(tests_modelnet_prio_sched_test_SOURCES) \
	$(tests_modelnet_simplep2p_test_SOURCES) \
	$(tests_modelnet_test_SOURCES) \
	$(tests_modelnet_test_collective_SOURCES) \
	$(tests_modelnet_test_dragonfly_SOURCES) \
	$(tests_rc_stack_test_SOURCES) $(tests_resource_test_SOURCES) \
	$(tests_workload_codes_workload_mpi_replay_SOURCES) \
	$(tests_workload_codes_workload_test_SOURCES)
DIST_SOURCES = $(am__src_libcodes_la_SOURCES_DIST) \
	$(src_libcodes_mpi_replay_la_SOURCES) \
	$(doc_example_example_SOURCES) \
	$(doc_example_tutorial_synthetic_ping_pong_SOURCES) \
	$(doc_example_heterogeneous_example_SOURCES) \
	src/network-workloads/archived/model-net-synthetic-custom-dfly.c \
	src/network-workloads/archived/model-net-synthetic-dally-dfly.c \
	src/network-workloads/archived/model-net-synthetic-dfly-plus.c \
	$(src_network_workloads_model_net_dumpi_traces_dump_SOURCES) \
	$(src_network_workloads_model_net_mpi_replay_SOURCES) \
	$(src_network_workloads_model_net_synthetic_SOURCES) \
	$(src_network_workloads_model_net_synthetic_custom_dfly_SOURCES) \
	$(src_network_workloads_model_net_synthetic_dally_dfly_SOURCES) \
	$(src_network_workloads_model_net_synthetic_dfly_plus_SOURCES) \
	$(src_network_workloads_model_net_synthetic_dragonfly_all_SOURCES) \
	src/network-workloads/model-net-synthetic-fattree.c \
	$(src_network_workloads_model_net_synthetic_slimfly_SOURCES) \
	$(src_networks_model_net_topology_test_SOURCES) \
	$(src_util_templates_lp_template_dummy_main_SOURCES) \
	$(src_workload_codes_workload_dump_SOURCES) \
	$(tests_concurrent_msg_recv_SOURCES) \
	$(tests_jobmap_test_SOURCES) $(tests_lp_io_test_SOURCES) \
	$(tests_lsm_test_SOURCES) $(tests_map_ctx_test_SOURCES) \
	$(tests_mapping_test_SOURCES) $(tests_modelnet_p2p_bw_SOURCES) \
	$(tests_modelnet_prio_sched_test_SOURCES) \
	$(tests_modelnet_simplep2p_test_SOURCES) \
	$(tests_modelnet_test_SOURCES) \
	$(tests_modelnet_test_collective_SOURCES) \
	$(tests_modelnet_test_dragonfly_SOURCES) \
	$(tests_rc_stack_test_SOURCES) $(tests_resource_test_SOURCES) \
	$(tests_workload_codes_workload_mpi_replay_SOURCES) \
	$(tests_workload_codes_workload_test_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
DATA = $(pkgconfig_DATA)
HEADERS = $(nobase_include_HEADERS) $(noinst_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) \
	$(LISP)codes_config.h.in
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
CSCOPE = cscope
AM_RECURSIVE_TARGETS = cscope check recheck
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS =  .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  if test -d "$(distdir)"; then \
    find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
      && rm -rf "$(distdir)" \
      || { sleep 5 && rm -rf "$(distdir)"; }; \
  else :; fi
am__post_remove_distdir = $(am__remove_distdir)
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
DIST_TARGETS = dist-gzip
distuninstallcheck_listfiles = find . -type f -print
am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \
  | sed 's|^\./|$(prefix)/|' | grep -v '$(infodir)/dir$$'
distcleancheck_listfiles = find . -type f -print
ACLOCAL = ${SHELL} /home/bhowmik/buildSoftware/KevCodes/codes_new/codes/missing aclocal-1.13
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AR = ar
ARGOBOTS_CFLAGS = -I/home/bhowmik/installSoftware/argobots/include  
ARGOBOTS_LIBS = -L/home/bhowmik/installSoftware/argobots/lib -labt -lrt -ldl -lpthread  
AUTOCONF = ${SHELL} /home/bhowmik/buildSoftware/KevCodes/codes_new/codes/missing autoconf
AUTOHEADER = ${SHELL} /home/bhowmik/buildSoftware/KevCodes/codes_new/codes/missing autoheader
AUTOMAKE = ${SHELL} /home/bhowmik/buildSoftware/KevCodes/codes_new/codes/missing automake-1.13
AWK = gawk
BISON = 
BOOST_CPPFLAGS = -I/home/bhowmik/buildSoftware/installSoftware/boost/include
BOOST_LDFLAGS = -L/home/bhowmik/buildSoftware/installSoftware/boost/lib
CC = mpicc
CCDEPMODE = depmode=gcc3
CFLAGS = -O0 -I/home/bhowmik/buildSoftware/TensorflowC/include -Wall -Wextra -Wshadow
CODES_PURE_PARSER_DEFINES = %pure-parser
CODES_PUSH_PARSER_DEFINES = %define api.push_pull "push"
CORTEX_CFLAGS = 
CORTEX_LIBS = 
CORTEX_PYTHON_CFLAGS = 
CORTEX_PYTHON_LIBS = 
CPP = mpicc -E
CPPFLAGS = 
CXX = mpicxx -std=c++11
CXXCPP = mpicxx -E -std=c++11
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -O0 --std=c++14 -I/home/bhowmik/buildSoftware/TensorflowC/include -I/home/bhowmik/buildSoftware/cppf/include
CYGPATH_W = echo
DARSHAN_CFLAGS = 
DARSHAN_LIBS = 
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
DUMPI_CFLAGS = 
DUMPI_LIBS = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
FGREP = /usr/bin/grep -F
FLEX = 
GREP = /usr/bin/grep
HAVE_CXX11 = 1
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = -L/home/bhowmik/lib -L/home/bhowmik/buildSoftware/TensorflowC/lib
LEX = flex
LEXLIB = 
LEX_OUTPUT_ROOT = lex.yy
LIBOBJS = 
LIBS = -lm -lpthread -ltensorflow
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAKEINFO = ${SHELL} /home/bhowmik/buildSoftware/KevCodes/codes_new/codes/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /usr/bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = codes
PACKAGE_BUGREPORT = http://trac.mcs.anl.gov/projects/codes/newticket
PACKAGE_NAME = codes
PACKAGE_STRING = codes 1.2
PACKAGE_TARNAME = codes
PACKAGE_URL = http://www.mcs.anl.gov/projects/codes/
PACKAGE_VERSION = 1.2
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = /home/bhowmik/installSoftware/argobots/lib/pkgconfig:/home/bhowmik/installSoftware/ROSS-new/lib/pkgconfig:/home/bhowmik/installSoftware/swm-kev/lib/pkgconfig
PYTHON_CFLAGS = 
PYTHON_LIBS = 
RANLIB = ranlib
RECORDER_CPPFLAGS = -DUSE_RECORDER=1
ROSS_CFLAGS = -I/home/bhowmik/installSoftware/ROSS-new/include  
ROSS_Damaris_CFLAGS = 
ROSS_Damaris_LIBS = 
ROSS_LIBS = -Wl,-rpath,/home/bhowmik/installSoftware/ROSS-new/lib -L/home/bhowmik/installSoftware/ROSS-new/lib -lROSS -lm  
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
SWM_CFLAGS = -I/home/bhowmik/installSoftware/swm-kev/include  
SWM_DATAROOTDIR = /home/bhowmik/installSoftware/swm-kev/share
SWM_LIBS = -L/home/bhowmik/installSoftware/swm-kev/lib -lswm  
VERSION = 1.2
YACC = bison -y
YFLAGS = 
abs_builddir = /home/bhowmik/buildSoftware/KevCodes/codes_new/codes/build
abs_srcdir = /home/bhowmik/buildSoftware/KevCodes/codes_new/codes/build/..
abs_top_builddir = /home/bhowmik/buildSoftware/KevCodes/codes_new/codes/build
abs_top_srcdir = /home/bhowmik/buildSoftware/KevCodes/codes_new/codes/build/..
ac_ct_AR = ar
ac_ct_CC = mpicc
ac_ct_CXX = 
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
bison_ok = yes
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/bhowmik/buildSoftware/KevCodes/codes_new/codes/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /home/bhowmik/installSoftware/codes-swm
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = ..
sysconfdir = ${prefix}/etc
target = x86_64-unknown-linux-gnu
target_alias = 
target_cpu = x86_64
target_os = linux-gnu
target_vendor = unknown
top_build_prefix = 
top_builddir = .
top_srcdir = ..
AUTOMAKE_OPTIONS = foreign
ACLOCAL_AMFLAGS = -I m4
bin_SCRIPTS = $(my_bin_scripts) scripts/_configurator.py
noinst_LIBRARIES = 
lib_LTLIBRARIES = src/libcodes.la src/libcodes_mpi_replay.la
noinst_HEADERS = 
CLEANFILES = $(bin_SCRIPTS) $(my_bin_scripts)
EXTRA_DIST = prepare.sh LICENSE.md configure.ac uc-codes.cfg \
	reformat.sh misc/README misc/ptrn_loggp-2.4.6.patch \
	CONTRIBUTORS.md README.md scripts/codes_configurator.py.in \
	scripts/codes_filter_configs.py.in \
	scripts/codes_config_get_vals.py.in scripts/configurator.py \
	scripts/example/example.template scripts/example/params.py \
	scripts/allocation_gen/config_alloc.conf \
	scripts/allocation_gen/config_alloc-upd.conf \
	scripts/allocation_gen/listgen.py \
	scripts/allocation_gen/listgen-upd.py \
	scripts/allocation_gen/README \
	src/iokernellang/codesparser.y.in \
	src/iokernellang/codeslexer.l src/modelconfig/configparser.y \
	src/modelconfig/configlex.l src/modelconfig/README.txt \
	src/util/templates/README.txt \
	src/util/README.codes-mapping.txt src/util/README.lp-io.txt \
	src/workload/README.codes-workload \
	src/network-workloads/README_synthetic.txt \
	src/network-workloads/README_traces.txt \
	src/network-workloads/conf/workloads.conf \
	src/network-workloads/README_synthetic_slimfly.txt \
	src/network-workloads/conf/modelnet-mpi-test.conf \
	src/network-workloads/conf/modelnet-mpi-test-cry-router.conf \
	src/network-workloads/conf/modelnet-mpi-test-dragonfly.conf \
	src/network-workloads/conf/modelnet-mpi-test-mini-fe.conf \
	src/network-workloads/conf/modelnet-mpi-test-torus.conf \
	src/network-workloads/conf/allocation-cont.conf \
	src/network-workloads/conf/allocation-random.conf \
	src/network-workloads/conf/modelnet-synthetic-dragonfly.conf \
	src/network-workloads/conf/modelnet-synthetic-slimfly-min.conf \
	src/network-workloads/conf/modelnet-synthetic-fattree.conf \
	src/networks/model-net/doc/README \
	src/networks/model-net/doc/README.dragonfly.txt \
	src/networks/model-net/doc/README.loggp.txt \
	src/networks/model-net/doc/README.simplenet.txt \
	src/networks/model-net/doc/README.simplep2p.txt \
	src/networks/model-net/doc/README.torus.txt \
	src/networks/model-net/doc/README.slimfly.txt \
	tests/download-traces.sh tests/lp-io-test.sh \
	tests/workload/codes-workload-test.sh \
	tests/workload/codes-workload-test.conf \
	tests/workload/README.txt tests/workload/darshan-dump.sh \
	tests/workload/example.darshan tests/mapping_test.sh \
	tests/lsm-test.sh tests/resource-test.sh tests/jobmap-test.sh \
	tests/map-ctx-test.sh tests/conf/jobmap-test-list.conf \
	tests/conf/buffer_test.conf tests/conf/lsm-test.conf \
	tests/conf/mapping_test.conf tests/conf/map-ctx-test.conf \
	tests/expected/mapping_test.out tests/modelnet-test.sh \
	tests/modelnet-test-torus.sh \
	tests/modelnet-test-torus-traces.sh \
	tests/modelnet-test-loggp.sh tests/modelnet-test-dragonfly.sh \
	tests/modelnet-test-dragonfly-synthetic.sh \
	tests/modelnet-test-dragonfly-traces.sh \
	tests/modelnet-test-dragonfly-custom-synthetic.sh \
	tests/modelnet-test-dragonfly-custom-traces.sh \
	tests/modelnet-test-dragonfly-plus-synthetic.sh \
	tests/modelnet-test-dragonfly-dally-synthetic.sh \
	tests/modelnet-test-em.sh \
	tests/modelnet-test-fattree-synthetic.sh \
	tests/modelnet-test-slimfly.sh \
	tests/modelnet-test-slimfly-synthetic.sh \
	tests/modelnet-test-slimfly-traces.sh \
	tests/modelnet-p2p-bw-loggp.sh \
	tests/modelnet-prio-sched-test.sh \
	tests/conf/concurrent_msg_recv.conf \
	tests/conf/modelnet-p2p-bw-loggp.conf \
	tests/conf/modelnet-prio-sched-test.conf \
	tests/conf/modelnet-test-bw.conf \
	tests/conf/modelnet-test-bw-tri.conf \
	tests/conf/modelnet-test.conf tests/conf/modelnet-test-em.conf \
	tests/conf/modelnet-test-dragonfly.conf \
	tests/conf/modelnet-test-slimfly.conf \
	tests/conf/modelnet-test-loggp.conf \
	tests/conf/modelnet-test-simplep2p.conf \
	tests/conf/modelnet-test-latency.conf \
	tests/conf/modelnet-test-latency-tri.conf \
	tests/conf/modelnet-test-torus.conf \
	tests/conf/ng-mpi-tukey.dat \
	src/network-workloads/conf/modelnet-mpi-test-slimfly-min.conf \
	src/network-workloads/conf/modelnet-mpi-test-dfly-amg-216.conf \
	src/network-workloads/conf/dragonfly-custom/intra-theta \
	src/network-workloads/conf/dragonfly-custom/inter-theta \
	src/network-workloads/conf/dragonfly-plus/dfp_8k.conf \
	src/network-workloads/conf/dragonfly-plus/dfp_8k_intra \
	src/network-workloads/conf/dragonfly-plus/dfp_8k_inter \
	src/network-workloads/conf/dragonfly-dally/dfdally_8k.conf \
	src/network-workloads/conf/dragonfly-dally/dfdally_8k_intra \
	src/network-workloads/conf/dragonfly-dally/dfdally_8k_inter \
	tests/README_MN_TEST.txt doc/BUILD_STEPS doc/GETTING_STARTED \
	doc/RELEASE_NOTES doc/acmsmall.cls doc/algorithm.sty \
	doc/algorithmic.sty doc/codes-best-practices.tex doc/Makefile \
	doc/example/example.conf doc/example/tutorial-ping-pong.conf \
	doc/example_heterogeneous/example.conf \
	doc/example_heterogeneous/example_torus.conf \
	doc/example_heterogeneous/README \
	doc/workload/example.kernel.txt doc/workload/meta.txt
BUILT_SOURCES = src/modelconfig/configparser.h \
	src/modelconfig/configlex.h
AM_LDFLAGS = $(BOOST_LDFLAGS)

# pkgconfig files
pkgconfigdir = $(libdir)/pkgconfig
pkgconfig_DATA = maint/codes.pc
AM_CPPFLAGS = -I$(top_srcdir)/src ${ROSS_CFLAGS} $(BOOST_CPPFLAGS) \
	$(am__append_1) $(am__append_4) $(am__append_8) \
	$(am__append_10) $(am__append_13) $(am__append_17) \
	$(am__append_19) $(am__append_22)
AM_CFLAGS = $(am__append_2)
AM_CXXFLAGS = $(AM_CFLAGS) $(am__append_3)
LDADD = $(lib_LTLIBRARIES) $(ROSS_LIBS) $(am__append_6) \
	$(am__append_11) $(am__append_18) $(am__append_20) \
	$(am__append_21) $(am__append_23)
my_bin_scripts = scripts/codes_configurator \
			   scripts/codes_filter_configs \
			   scripts/codes_config_get_vals


# manual rules for now
do_subst = sed -e 's![@]bindir[@]!$(bindir)!g'

#BUILT_SOURCES += src/iokernellang/codesparser.h \
#		 src/iokernellang/codesparser.c \
#                 src/iokernellang/codeslexer.h \
#                 src/iokernellang/codeslexer.h

#src/iokernellang/codesparser.y: src/iokernellang/codesparser.y.in Makefile

#src/iokernellang/codesparser.c src/iokernellang/codesparser.h: src/iokernellang/codesparser.y

#src/iokernellang/codeslexer.h: $(top_srcdir)/src/iokernellang/codeslexer.h
#mkdir -p codes
#cp $(top_srcdir)/src/iokernellang/codeslexer.h src/iokernellang/codeslexer.h
nobase_include_HEADERS = \
    codes/quickhash.h \
    codes/quicklist.h \
    codes/codes_mapping.h \
    codes/lp-type-lookup.h \
    codes/codes.h \
    codes/configuration.h \
    codes/lp-io.h \
	codes/lp-msg.h \
    codes/jenkins-hash.h \
    codes/codes-workload.h \
	codes/resource.h \
	codes/resource-lp.h \
	codes/local-storage-model.h \
	codes/rc-stack.h \
	codes/codes-jobmap.h \
	codes/codes-callback.h \
	codes/codes-mapping-context.h \
	codes/model-net.h	\
	codes/model-net-method.h \
	codes/model-net-lp.h \
	codes/model-net-sched.h \
	codes/model-net-sched-impl.h \
	codes/model-net-inspect.h \
	codes/connection-manager.h	\
	codes/net/common-net.h \
	codes/net/dragonfly.h \
	codes/net/dragonfly-custom.h \
	codes/net/dragonfly-dally.h \
	codes/net/dragonfly-plus.h \
	codes/net/slimfly.h \
	codes/net/fattree.h \
	codes/net/loggp.h \
	codes/net/simplenet-upd.h \
	codes/net/simplep2p.h \
	codes/net/express-mesh.h \
	codes/net/torus.h \
    codes/codes-mpi-replay.h \
	codes/configfile.h


#codes/codes-nw-workload.h
src_libcodes_la_SOURCES = src/iokernellang/codesparser.h \
	src/iokernellang/codesparser.c src/iokernellang/codeslexer.h \
	src/iokernellang/codeslexer.c src/iokernellang/codesImpl.c \
	src/iokernellang/CodesIOKernelContext.h \
	src/iokernellang/CodesIOKernelParser.h \
	src/iokernellang/CodesIOKernelTypes.h \
	src/iokernellang/CodesKernelHelpers.h \
	src/iokernellang/CodesKernelHelpers.c \
	src/modelconfig/configlex.c src/modelconfig/configlex.h \
	src/modelconfig/configparser.c src/modelconfig/configparser.h \
	src/modelconfig/configfile.c src/modelconfig/configglue.h \
	src/modelconfig/configglue.c src/modelconfig/configstore.h \
	src/modelconfig/configstore.c \
	src/modelconfig/configstoreadapter.h \
	src/modelconfig/configstoreadapter.c \
	src/modelconfig/txt_configfile.h \
	src/modelconfig/txt_configfile.c \
	src/modelconfig/configuration.c src/util/codes_mapping.c \
	src/util/lp-type-lookup.c src/util/lp-io.c src/util/lp-msg.c \
	src/util/lookup3.c src/util/resource.c src/util/resource-lp.c \
	src/util/local-storage-model.c \
	src/util/codes-jobmap-method-impl.h src/util/codes-jobmap.c \
	src/util/jobmap-impl/jobmap-dummy.c \
	src/util/jobmap-impl/jobmap-list.c \
	src/util/jobmap-impl/jobmap-identity.c \
	src/util/codes-mapping-context.c src/util/codes-comm.c \
	src/util/connection-manager.C src/workload/codes-workload.c \
	src/workload/methods/codes-iolang-wrkld.c \
	src/workload/methods/codes-checkpoint-wrkld.c \
	src/workload/methods/test-workload-method.c \
	src/workload/methods/codes-iomock-wrkld.c codes/rc-stack.h \
	src/util/rc-stack.c src/networks/model-net/core/model-net.c \
	src/networks/model-net/common-net.c \
	src/networks/model-net/simplenet-upd.c \
	src/networks/model-net/torus.c \
	src/networks/model-net/express-mesh.C \
	src/networks/model-net/dragonfly.c \
	src/networks/model-net/dragonfly-custom.C \
	src/networks/model-net/dragonfly-plus.C \
	src/networks/model-net/dragonfly-dally.C \
	src/networks/model-net/slimfly.c \
	src/networks/model-net/fattree.c \
	src/networks/model-net/loggp.c \
	src/networks/model-net/simplep2p.c \
	src/networks/model-net/core/model-net-lp.c \
	src/networks/model-net/core/model-net-sched.c \
	src/networks/model-net/core/model-net-sched-impl.c \
	$(am__append_5) $(am__append_9) $(am__append_12) \
	$(am__append_14)
src_libcodes_mpi_replay_la_SOURCES = \
  src/network-workloads/model-net-mpi-replay.c

src_util_templates_lp_template_dummy_main_SOURCES = \
 src/util/templates/lp_template_dummy_main.c \
 src/util/templates/lp_template.c \
 src/util/templates/lp_template.h

src_workload_codes_workload_dump_SOURCES = \
 src/workload/codes-workload-dump.c

src_network_workloads_model_net_dumpi_traces_dump_SOURCES = src/network-workloads/model-net-dumpi-traces-dump.c
src_network_workloads_model_net_synthetic_slimfly_SOURCES = src/network-workloads/model-net-synthetic-slimfly.c
src_network_workloads_model_net_mpi_replay_SOURCES = \
	src/network-workloads/model-net-mpi-replay.c \
  src/network-workloads/model-net-mpi-replay-main.c

src_network_workloads_model_net_mpi_replay_CFLAGS = $(AM_CFLAGS)
src_network_workloads_model_net_synthetic_SOURCES = src/network-workloads/model-net-synthetic.c
src_network_workloads_model_net_synthetic_custom_dfly_SOURCES = src/network-workloads/archived/model-net-synthetic-custom-dfly.c
src_network_workloads_model_net_synthetic_dfly_plus_SOURCES = src/network-workloads/archived/model-net-synthetic-dfly-plus.c
src_network_workloads_model_net_synthetic_dally_dfly_SOURCES = src/network-workloads/archived/model-net-synthetic-dally-dfly.c
src_network_workloads_model_net_synthetic_dragonfly_all_SOURCES = src/network-workloads/model-net-synthetic-dragonfly-all.c
src_networks_model_net_topology_test_SOURCES = src/networks/model-net/topology-test.c
tests_lp_io_test_SOURCES = tests/lp-io-test.c
tests_mapping_test_SOURCES = tests/mapping_test.c
tests_resource_test_SOURCES = tests/resource-test.c
tests_lsm_test_SOURCES = tests/local-storage-model-test.c
tests_rc_stack_test_SOURCES = tests/rc-stack-test.c
tests_jobmap_test_SOURCES = tests/jobmap-test.c
tests_map_ctx_test_SOURCES = tests/map-ctx-test.c
tests_workload_codes_workload_test_SOURCES = \
 tests/workload/codes-workload-test.c \
 tests/workload/codes-workload-test-svr-lp.c \
 tests/workload/codes-workload-test-svr-lp.h \
 tests/workload/codes-workload-test-cn-lp.c \
 tests/workload/codes-workload-test-cn-lp.h 

tests_workload_codes_workload_mpi_replay_SOURCES = tests/workload/codes-workload-mpi-replay.c
tests_modelnet_test_SOURCES = tests/modelnet-test.c
tests_modelnet_test_dragonfly_SOURCES = tests/modelnet-test-dragonfly.c
tests_modelnet_simplep2p_test_SOURCES = tests/modelnet-simplep2p-test.c
tests_modelnet_p2p_bw_SOURCES = tests/modelnet-p2p-bw.c
tests_concurrent_msg_recv_SOURCES = tests/concurrent-msg-recv.c
tests_modelnet_test_collective_SOURCES = tests/modelnet-test-collective.c
tests_modelnet_prio_sched_test_SOURCES = tests/modelnet-prio-sched-test.c
doc_example_example_SOURCES = doc/example/example.c
doc_example_heterogeneous_example_SOURCES = doc/example_heterogeneous/example.c
doc_example_tutorial_synthetic_ping_pong_SOURCES = doc/example/tutorial-synthetic-ping-pong.c
all: $(BUILT_SOURCES) codes_config.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .C .c .lo .log .o .obj .test .test$(EXEEXT) .trs
am--refresh: Makefile
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(srcdir)/Make.rules $(top_srcdir)/scripts/Makefile.subdir $(top_srcdir)/src/Makefile.subdir $(top_srcdir)/tests/Makefile.subdir $(top_srcdir)/doc/Makefile.subdir $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --foreign \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;
$(srcdir)/Make.rules $(top_srcdir)/scripts/Makefile.subdir $(top_srcdir)/src/Makefile.subdir $(top_srcdir)/tests/Makefile.subdir $(top_srcdir)/doc/Makefile.subdir:

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):

codes_config.h: stamp-h1
	@if test ! -f $@; then rm -f stamp-h1; else :; fi
	@if test ! -f $@; then $(MAKE) $(AM_MAKEFLAGS) stamp-h1; else :; fi

stamp-h1: $(srcdir)/codes_config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status codes_config.h
$(srcdir)/codes_config.h.in:  $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f codes_config.h stamp-h1
maint/codes.pc: $(top_builddir)/config.status $(top_srcdir)/maint/codes.pc.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
src/network-workloads/conf/dragonfly-custom/modelnet-test-dragonfly-1728-nodes.conf: $(top_builddir)/config.status $(top_srcdir)/src/network-workloads/conf/dragonfly-custom/modelnet-test-dragonfly-1728-nodes.conf.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
src/network-workloads/conf/dragonfly-plus/modelnet-test-dragonfly-plus.conf: $(top_builddir)/config.status $(top_srcdir)/src/network-workloads/conf/dragonfly-plus/modelnet-test-dragonfly-plus.conf.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
src/network-workloads/conf/dragonfly-dally/modelnet-test-dragonfly-dally.conf: $(top_builddir)/config.status $(top_srcdir)/src/network-workloads/conf/dragonfly-dally/modelnet-test-dragonfly-dally.conf.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
doc/example/tutorial-ping-pong.conf: $(top_builddir)/config.status $(top_srcdir)/doc/example/tutorial-ping-pong.conf.in
	cd $(top_builddir) && $(SHELL) ./config.status $@

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}
src/iokernellang/$(am__dirstamp):
	@$(MKDIR_P) src/iokernellang
	@: > src/iokernellang/$(am__dirstamp)
src/iokernellang/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/iokernellang/$(DEPDIR)
	@: > src/iokernellang/$(DEPDIR)/$(am__dirstamp)
src/iokernellang/codesparser.lo: src/iokernellang/$(am__dirstamp) \
	src/iokernellang/$(DEPDIR)/$(am__dirstamp)
src/iokernellang/codeslexer.lo: src/iokernellang/$(am__dirstamp) \
	src/iokernellang/$(DEPDIR)/$(am__dirstamp)
src/iokernellang/codesImpl.lo: src/iokernellang/$(am__dirstamp) \
	src/iokernellang/$(DEPDIR)/$(am__dirstamp)
src/iokernellang/CodesKernelHelpers.lo:  \
	src/iokernellang/$(am__dirstamp) \
	src/iokernellang/$(DEPDIR)/$(am__dirstamp)
src/modelconfig/$(am__dirstamp):
	@$(MKDIR_P) src/modelconfig
	@: > src/modelconfig/$(am__dirstamp)
src/modelconfig/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/modelconfig/$(DEPDIR)
	@: > src/modelconfig/$(DEPDIR)/$(am__dirstamp)
src/modelconfig/configlex.lo: src/modelconfig/$(am__dirstamp) \
	src/modelconfig/$(DEPDIR)/$(am__dirstamp)
src/modelconfig/configparser.lo: src/modelconfig/$(am__dirstamp) \
	src/modelconfig/$(DEPDIR)/$(am__dirstamp)
src/modelconfig/configfile.lo: src/modelconfig/$(am__dirstamp) \
	src/modelconfig/$(DEPDIR)/$(am__dirstamp)
src/modelconfig/configglue.lo: src/modelconfig/$(am__dirstamp) \
	src/modelconfig/$(DEPDIR)/$(am__dirstamp)
src/modelconfig/configstore.lo: src/modelconfig/$(am__dirstamp) \
	src/modelconfig/$(DEPDIR)/$(am__dirstamp)
src/modelconfig/configstoreadapter.lo:  \
	src/modelconfig/$(am__dirstamp) \
	src/modelconfig/$(DEPDIR)/$(am__dirstamp)
src/modelconfig/txt_configfile.lo: src/modelconfig/$(am__dirstamp) \
	src/modelconfig/$(DEPDIR)/$(am__dirstamp)
src/modelconfig/configuration.lo: src/modelconfig/$(am__dirstamp) \
	src/modelconfig/$(DEPDIR)/$(am__dirstamp)
src/util/$(am__dirstamp):
	@$(MKDIR_P) src/util
	@: > src/util/$(am__dirstamp)
src/util/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/util/$(DEPDIR)
	@: > src/util/$(DEPDIR)/$(am__dirstamp)
src/util/codes_mapping.lo: src/util/$(am__dirstamp) \
	src/util/$(DEPDIR)/$(am__dirstamp)
src/util/lp-type-lookup.lo: src/util/$(am__dirstamp) \
	src/util/$(DEPDIR)/$(am__dirstamp)
src/util/lp-io.lo: src/util/$(am__dirstamp) \
	src/util/$(DEPDIR)/$(am__dirstamp)
src/util/lp-msg.lo: src/util/$(am__dirstamp) \
	src/util/$(DEPDIR)/$(am__dirstamp)
src/util/lookup3.lo: src/util/$(am__dirstamp) \
	src/util/$(DEPDIR)/$(am__dirstamp)
src/util/resource.lo: src/util/$(am__dirstamp) \
	src/util/$(DEPDIR)/$(am__dirstamp)
src/util/resource-lp.lo: src/util/$(am__dirstamp) \
	src/util/$(DEPDIR)/$(am__dirstamp)
src/util/local-storage-model.lo: src/util/$(am__dirstamp) \
	src/util/$(DEPDIR)/$(am__dirstamp)
src/util/codes-jobmap.lo: src/util/$(am__dirstamp) \
	src/util/$(DEPDIR)/$(am__dirstamp)
src/util/jobmap-impl/$(am__dirstamp):
	@$(MKDIR_P) src/util/jobmap-impl
	@: > src/util/jobmap-impl/$(am__dirstamp)
src/util/jobmap-impl/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/util/jobmap-impl/$(DEPDIR)
	@: > src/util/jobmap-impl/$(DEPDIR)/$(am__dirstamp)
src/util/jobmap-impl/jobmap-dummy.lo:  \
	src/util/jobmap-impl/$(am__dirstamp) \
	src/util/jobmap-impl/$(DEPDIR)/$(am__dirstamp)
src/util/jobmap-impl/jobmap-list.lo:  \
	src/util/jobmap-impl/$(am__dirstamp) \
	src/util/jobmap-impl/$(DEPDIR)/$(am__dirstamp)
src/util/jobmap-impl/jobmap-identity.lo:  \
	src/util/jobmap-impl/$(am__dirstamp) \
	src/util/jobmap-impl/$(DEPDIR)/$(am__dirstamp)
src/util/codes-mapping-context.lo: src/util/$(am__dirstamp) \
	src/util/$(DEPDIR)/$(am__dirstamp)
src/util/codes-comm.lo: src/util/$(am__dirstamp) \
	src/util/$(DEPDIR)/$(am__dirstamp)
src/util/connection-manager.lo: src/util/$(am__dirstamp) \
	src/util/$(DEPDIR)/$(am__dirstamp)
src/workload/$(am__dirstamp):
	@$(MKDIR_P) src/workload
	@: > src/workload/$(am__dirstamp)
src/workload/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/workload/$(DEPDIR)
	@: > src/workload/$(DEPDIR)/$(am__dirstamp)
src/workload/codes-workload.lo: src/workload/$(am__dirstamp) \
	src/workload/$(DEPDIR)/$(am__dirstamp)
src/workload/methods/$(am__dirstamp):
	@$(MKDIR_P) src/workload/methods
	@: > src/workload/methods/$(am__dirstamp)
src/workload/methods/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/workload/methods/$(DEPDIR)
	@: > src/workload/methods/$(DEPDIR)/$(am__dirstamp)
src/workload/methods/codes-iolang-wrkld.lo:  \
	src/workload/methods/$(am__dirstamp) \
	src/workload/methods/$(DEPDIR)/$(am__dirstamp)
src/workload/methods/codes-checkpoint-wrkld.lo:  \
	src/workload/methods/$(am__dirstamp) \
	src/workload/methods/$(DEPDIR)/$(am__dirstamp)
src/workload/methods/test-workload-method.lo:  \
	src/workload/methods/$(am__dirstamp) \
	src/workload/methods/$(DEPDIR)/$(am__dirstamp)
src/workload/methods/codes-iomock-wrkld.lo:  \
	src/workload/methods/$(am__dirstamp) \
	src/workload/methods/$(DEPDIR)/$(am__dirstamp)
src/util/rc-stack.lo: src/util/$(am__dirstamp) \
	src/util/$(DEPDIR)/$(am__dirstamp)
src/networks/model-net/core/$(am__dirstamp):
	@$(MKDIR_P) src/networks/model-net/core
	@: > src/networks/model-net/core/$(am__dirstamp)
src/networks/model-net/core/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/networks/model-net/core/$(DEPDIR)
	@: > src/networks/model-net/core/$(DEPDIR)/$(am__dirstamp)
src/networks/model-net/core/model-net.lo:  \
	src/networks/model-net/core/$(am__dirstamp) \
	src/networks/model-net/core/$(DEPDIR)/$(am__dirstamp)
src/networks/model-net/$(am__dirstamp):
	@$(MKDIR_P) src/networks/model-net
	@: > src/networks/model-net/$(am__dirstamp)
src/networks/model-net/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/networks/model-net/$(DEPDIR)
	@: > src/networks/model-net/$(DEPDIR)/$(am__dirstamp)
src/networks/model-net/common-net.lo:  \
	src/networks/model-net/$(am__dirstamp) \
	src/networks/model-net/$(DEPDIR)/$(am__dirstamp)
src/networks/model-net/simplenet-upd.lo:  \
	src/networks/model-net/$(am__dirstamp) \
	src/networks/model-net/$(DEPDIR)/$(am__dirstamp)
src/networks/model-net/torus.lo:  \
	src/networks/model-net/$(am__dirstamp) \
	src/networks/model-net/$(DEPDIR)/$(am__dirstamp)
src/networks/model-net/express-mesh.lo:  \
	src/networks/model-net/$(am__dirstamp) \
	src/networks/model-net/$(DEPDIR)/$(am__dirstamp)
src/networks/model-net/dragonfly.lo:  \
	src/networks/model-net/$(am__dirstamp) \
	src/networks/model-net/$(DEPDIR)/$(am__dirstamp)
src/networks/model-net/dragonfly-custom.lo:  \
	src/networks/model-net/$(am__dirstamp) \
	src/networks/model-net/$(DEPDIR)/$(am__dirstamp)
src/networks/model-net/dragonfly-plus.lo:  \
	src/networks/model-net/$(am__dirstamp) \
	src/networks/model-net/$(DEPDIR)/$(am__dirstamp)
src/networks/model-net/dragonfly-dally.lo:  \
	src/networks/model-net/$(am__dirstamp) \
	src/networks/model-net/$(DEPDIR)/$(am__dirstamp)
src/networks/model-net/slimfly.lo:  \
	src/networks/model-net/$(am__dirstamp) \
	src/networks/model-net/$(DEPDIR)/$(am__dirstamp)
src/networks/model-net/fattree.lo:  \
	src/networks/model-net/$(am__dirstamp) \
	src/networks/model-net/$(DEPDIR)/$(am__dirstamp)
src/networks/model-net/loggp.lo:  \
	src/networks/model-net/$(am__dirstamp) \
	src/networks/model-net/$(DEPDIR)/$(am__dirstamp)
src/networks/model-net/simplep2p.lo:  \
	src/networks/model-net/$(am__dirstamp) \
	src/networks/model-net/$(DEPDIR)/$(am__dirstamp)
src/networks/model-net/core/model-net-lp.lo:  \
	src/networks/model-net/core/$(am__dirstamp) \
	src/networks/model-net/core/$(DEPDIR)/$(am__dirstamp)
src/networks/model-net/core/model-net-sched.lo:  \
	src/networks/model-net/core/$(am__dirstamp) \
	src/networks/model-net/core/$(DEPDIR)/$(am__dirstamp)
src/networks/model-net/core/model-net-sched-impl.lo:  \
	src/networks/model-net/core/$(am__dirstamp) \
	src/networks/model-net/core/$(DEPDIR)/$(am__dirstamp)
src/workload/methods/codes-darshan3-io-wrkld.lo:  \
	src/workload/methods/$(am__dirstamp) \
	src/workload/methods/$(DEPDIR)/$(am__dirstamp)
src/workload/methods/codes-recorder-io-wrkld.lo:  \
	src/workload/methods/$(am__dirstamp) \
	src/workload/methods/$(DEPDIR)/$(am__dirstamp)
src/workload/methods/codes-online-comm-wrkld.lo:  \
	src/workload/methods/$(am__dirstamp) \
	src/workload/methods/$(DEPDIR)/$(am__dirstamp)
src/workload/methods/codes-dumpi-trace-nw-wrkld.lo:  \
	src/workload/methods/$(am__dirstamp) \
	src/workload/methods/$(DEPDIR)/$(am__dirstamp)
src/$(am__dirstamp):
	@$(MKDIR_P) src
	@: > src/$(am__dirstamp)

src/libcodes.la: $(src_libcodes_la_OBJECTS) $(src_libcodes_la_DEPENDENCIES) $(EXTRA_src_libcodes_la_DEPENDENCIES) src/$(am__dirstamp)
	$(AM_V_CXXLD)$(CXXLINK) -rpath $(libdir) $(src_libcodes_la_OBJECTS) $(src_libcodes_la_LIBADD) $(LIBS)
src/network-workloads/$(am__dirstamp):
	@$(MKDIR_P) src/network-workloads
	@: > src/network-workloads/$(am__dirstamp)
src/network-workloads/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/network-workloads/$(DEPDIR)
	@: > src/network-workloads/$(DEPDIR)/$(am__dirstamp)
src/network-workloads/model-net-mpi-replay.lo:  \
	src/network-workloads/$(am__dirstamp) \
	src/network-workloads/$(DEPDIR)/$(am__dirstamp)

src/libcodes_mpi_replay.la: $(src_libcodes_mpi_replay_la_OBJECTS) $(src_libcodes_mpi_replay_la_DEPENDENCIES) $(EXTRA_src_libcodes_mpi_replay_la_DEPENDENCIES) src/$(am__dirstamp)
	$(AM_V_CCLD)$(LINK) -rpath $(libdir) $(src_libcodes_mpi_replay_la_OBJECTS) $(src_libcodes_mpi_replay_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
doc/example/$(am__dirstamp):
	@$(MKDIR_P) doc/example
	@: > doc/example/$(am__dirstamp)
doc/example/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) doc/example/$(DEPDIR)
	@: > doc/example/$(DEPDIR)/$(am__dirstamp)
doc/example/example.$(OBJEXT): doc/example/$(am__dirstamp) \
	doc/example/$(DEPDIR)/$(am__dirstamp)

doc/example/example$(EXEEXT): $(doc_example_example_OBJECTS) $(doc_example_example_DEPENDENCIES) $(EXTRA_doc_example_example_DEPENDENCIES) doc/example/$(am__dirstamp)
	@rm -f doc/example/example$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(doc_example_example_OBJECTS) $(doc_example_example_LDADD) $(LIBS)
doc/example/tutorial-synthetic-ping-pong.$(OBJEXT):  \
	doc/example/$(am__dirstamp) \
	doc/example/$(DEPDIR)/$(am__dirstamp)

doc/example/tutorial-synthetic-ping-pong$(EXEEXT): $(doc_example_tutorial_synthetic_ping_pong_OBJECTS) $(doc_example_tutorial_synthetic_ping_pong_DEPENDENCIES) $(EXTRA_doc_example_tutorial_synthetic_ping_pong_DEPENDENCIES) doc/example/$(am__dirstamp)
	@rm -f doc/example/tutorial-synthetic-ping-pong$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(doc_example_tutorial_synthetic_ping_pong_OBJECTS) $(doc_example_tutorial_synthetic_ping_pong_LDADD) $(LIBS)
doc/example_heterogeneous/$(am__dirstamp):
	@$(MKDIR_P) doc/example_heterogeneous
	@: > doc/example_heterogeneous/$(am__dirstamp)
doc/example_heterogeneous/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) doc/example_heterogeneous/$(DEPDIR)
	@: > doc/example_heterogeneous/$(DEPDIR)/$(am__dirstamp)
doc/example_heterogeneous/example.$(OBJEXT):  \
	doc/example_heterogeneous/$(am__dirstamp) \
	doc/example_heterogeneous/$(DEPDIR)/$(am__dirstamp)

doc/example_heterogeneous/example$(EXEEXT): $(doc_example_heterogeneous_example_OBJECTS) $(doc_example_heterogeneous_example_DEPENDENCIES) $(EXTRA_doc_example_heterogeneous_example_DEPENDENCIES) doc/example_heterogeneous/$(am__dirstamp)
	@rm -f doc/example_heterogeneous/example$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(doc_example_heterogeneous_example_OBJECTS) $(doc_example_heterogeneous_example_LDADD) $(LIBS)
src/network-workloads/archived/$(am__dirstamp):
	@$(MKDIR_P) src/network-workloads/archived
	@: > src/network-workloads/archived/$(am__dirstamp)
src/network-workloads/archived/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/network-workloads/archived/$(DEPDIR)
	@: > src/network-workloads/archived/$(DEPDIR)/$(am__dirstamp)
src/network-workloads/archived/model-net-synthetic-custom-dfly.$(OBJEXT):  \
	src/network-workloads/archived/$(am__dirstamp) \
	src/network-workloads/archived/$(DEPDIR)/$(am__dirstamp)

src/network-workloads/archived/model-net-synthetic-custom-dfly$(EXEEXT): $(src_network_workloads_archived_model_net_synthetic_custom_dfly_OBJECTS) $(src_network_workloads_archived_model_net_synthetic_custom_dfly_DEPENDENCIES) $(EXTRA_src_network_workloads_archived_model_net_synthetic_custom_dfly_DEPENDENCIES) src/network-workloads/archived/$(am__dirstamp)
	@rm -f src/network-workloads/archived/model-net-synthetic-custom-dfly$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(src_network_workloads_archived_model_net_synthetic_custom_dfly_OBJECTS) $(src_network_workloads_archived_model_net_synthetic_custom_dfly_LDADD) $(LIBS)
src/network-workloads/archived/model-net-synthetic-dally-dfly.$(OBJEXT):  \
	src/network-workloads/archived/$(am__dirstamp) \
	src/network-workloads/archived/$(DEPDIR)/$(am__dirstamp)

src/network-workloads/archived/model-net-synthetic-dally-dfly$(EXEEXT): $(src_network_workloads_archived_model_net_synthetic_dally_dfly_OBJECTS) $(src_network_workloads_archived_model_net_synthetic_dally_dfly_DEPENDENCIES) $(EXTRA_src_network_workloads_archived_model_net_synthetic_dally_dfly_DEPENDENCIES) src/network-workloads/archived/$(am__dirstamp)
	@rm -f src/network-workloads/archived/model-net-synthetic-dally-dfly$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(src_network_workloads_archived_model_net_synthetic_dally_dfly_OBJECTS) $(src_network_workloads_archived_model_net_synthetic_dally_dfly_LDADD) $(LIBS)
src/network-workloads/archived/model-net-synthetic-dfly-plus.$(OBJEXT):  \
	src/network-workloads/archived/$(am__dirstamp) \
	src/network-workloads/archived/$(DEPDIR)/$(am__dirstamp)

src/network-workloads/archived/model-net-synthetic-dfly-plus$(EXEEXT): $(src_network_workloads_archived_model_net_synthetic_dfly_plus_OBJECTS) $(src_network_workloads_archived_model_net_synthetic_dfly_plus_DEPENDENCIES) $(EXTRA_src_network_workloads_archived_model_net_synthetic_dfly_plus_DEPENDENCIES) src/network-workloads/archived/$(am__dirstamp)
	@rm -f src/network-workloads/archived/model-net-synthetic-dfly-plus$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(src_network_workloads_archived_model_net_synthetic_dfly_plus_OBJECTS) $(src_network_workloads_archived_model_net_synthetic_dfly_plus_LDADD) $(LIBS)
src/network-workloads/model-net-dumpi-traces-dump.$(OBJEXT):  \
	src/network-workloads/$(am__dirstamp) \
	src/network-workloads/$(DEPDIR)/$(am__dirstamp)

src/network-workloads/model-net-dumpi-traces-dump$(EXEEXT): $(src_network_workloads_model_net_dumpi_traces_dump_OBJECTS) $(src_network_workloads_model_net_dumpi_traces_dump_DEPENDENCIES) $(EXTRA_src_network_workloads_model_net_dumpi_traces_dump_DEPENDENCIES) src/network-workloads/$(am__dirstamp)
	@rm -f src/network-workloads/model-net-dumpi-traces-dump$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(src_network_workloads_model_net_dumpi_traces_dump_OBJECTS) $(src_network_workloads_model_net_dumpi_traces_dump_LDADD) $(LIBS)
src/network-workloads/src_network_workloads_model_net_mpi_replay-model-net-mpi-replay.$(OBJEXT):  \
	src/network-workloads/$(am__dirstamp) \
	src/network-workloads/$(DEPDIR)/$(am__dirstamp)
src/network-workloads/src_network_workloads_model_net_mpi_replay-model-net-mpi-replay-main.$(OBJEXT):  \
	src/network-workloads/$(am__dirstamp) \
	src/network-workloads/$(DEPDIR)/$(am__dirstamp)

src/network-workloads/model-net-mpi-replay$(EXEEXT): $(src_network_workloads_model_net_mpi_replay_OBJECTS) $(src_network_workloads_model_net_mpi_replay_DEPENDENCIES) $(EXTRA_src_network_workloads_model_net_mpi_replay_DEPENDENCIES) src/network-workloads/$(am__dirstamp)
	@rm -f src/network-workloads/model-net-mpi-replay$(EXEEXT)
	$(AM_V_CCLD)$(src_network_workloads_model_net_mpi_replay_LINK) $(src_network_workloads_model_net_mpi_replay_OBJECTS) $(src_network_workloads_model_net_mpi_replay_LDADD) $(LIBS)
src/network-workloads/model-net-synthetic.$(OBJEXT):  \
	src/network-workloads/$(am__dirstamp) \
	src/network-workloads/$(DEPDIR)/$(am__dirstamp)

src/network-workloads/model-net-synthetic$(EXEEXT): $(src_network_workloads_model_net_synthetic_OBJECTS) $(src_network_workloads_model_net_synthetic_DEPENDENCIES) $(EXTRA_src_network_workloads_model_net_synthetic_DEPENDENCIES) src/network-workloads/$(am__dirstamp)
	@rm -f src/network-workloads/model-net-synthetic$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(src_network_workloads_model_net_synthetic_OBJECTS) $(src_network_workloads_model_net_synthetic_LDADD) $(LIBS)

src/network-workloads/model-net-synthetic-custom-dfly$(EXEEXT): $(src_network_workloads_model_net_synthetic_custom_dfly_OBJECTS) $(src_network_workloads_model_net_synthetic_custom_dfly_DEPENDENCIES) $(EXTRA_src_network_workloads_model_net_synthetic_custom_dfly_DEPENDENCIES) src/network-workloads/$(am__dirstamp)
	@rm -f src/network-workloads/model-net-synthetic-custom-dfly$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(src_network_workloads_model_net_synthetic_custom_dfly_OBJECTS) $(src_network_workloads_model_net_synthetic_custom_dfly_LDADD) $(LIBS)

src/network-workloads/model-net-synthetic-dally-dfly$(EXEEXT): $(src_network_workloads_model_net_synthetic_dally_dfly_OBJECTS) $(src_network_workloads_model_net_synthetic_dally_dfly_DEPENDENCIES) $(EXTRA_src_network_workloads_model_net_synthetic_dally_dfly_DEPENDENCIES) src/network-workloads/$(am__dirstamp)
	@rm -f src/network-workloads/model-net-synthetic-dally-dfly$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(src_network_workloads_model_net_synthetic_dally_dfly_OBJECTS) $(src_network_workloads_model_net_synthetic_dally_dfly_LDADD) $(LIBS)

src/network-workloads/model-net-synthetic-dfly-plus$(EXEEXT): $(src_network_workloads_model_net_synthetic_dfly_plus_OBJECTS) $(src_network_workloads_model_net_synthetic_dfly_plus_DEPENDENCIES) $(EXTRA_src_network_workloads_model_net_synthetic_dfly_plus_DEPENDENCIES) src/network-workloads/$(am__dirstamp)
	@rm -f src/network-workloads/model-net-synthetic-dfly-plus$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(src_network_workloads_model_net_synthetic_dfly_plus_OBJECTS) $(src_network_workloads_model_net_synthetic_dfly_plus_LDADD) $(LIBS)
src/network-workloads/model-net-synthetic-dragonfly-all.$(OBJEXT):  \
	src/network-workloads/$(am__dirstamp) \
	src/network-workloads/$(DEPDIR)/$(am__dirstamp)

src/network-workloads/model-net-synthetic-dragonfly-all$(EXEEXT): $(src_network_workloads_model_net_synthetic_dragonfly_all_OBJECTS) $(src_network_workloads_model_net_synthetic_dragonfly_all_DEPENDENCIES) $(EXTRA_src_network_workloads_model_net_synthetic_dragonfly_all_DEPENDENCIES) src/network-workloads/$(am__dirstamp)
	@rm -f src/network-workloads/model-net-synthetic-dragonfly-all$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(src_network_workloads_model_net_synthetic_dragonfly_all_OBJECTS) $(src_network_workloads_model_net_synthetic_dragonfly_all_LDADD) $(LIBS)
src/network-workloads/model-net-synthetic-fattree.$(OBJEXT):  \
	src/network-workloads/$(am__dirstamp) \
	src/network-workloads/$(DEPDIR)/$(am__dirstamp)

src/network-workloads/model-net-synthetic-fattree$(EXEEXT): $(src_network_workloads_model_net_synthetic_fattree_OBJECTS) $(src_network_workloads_model_net_synthetic_fattree_DEPENDENCIES) $(EXTRA_src_network_workloads_model_net_synthetic_fattree_DEPENDENCIES) src/network-workloads/$(am__dirstamp)
	@rm -f src/network-workloads/model-net-synthetic-fattree$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(src_network_workloads_model_net_synthetic_fattree_OBJECTS) $(src_network_workloads_model_net_synthetic_fattree_LDADD) $(LIBS)
src/network-workloads/model-net-synthetic-slimfly.$(OBJEXT):  \
	src/network-workloads/$(am__dirstamp) \
	src/network-workloads/$(DEPDIR)/$(am__dirstamp)

src/network-workloads/model-net-synthetic-slimfly$(EXEEXT): $(src_network_workloads_model_net_synthetic_slimfly_OBJECTS) $(src_network_workloads_model_net_synthetic_slimfly_DEPENDENCIES) $(EXTRA_src_network_workloads_model_net_synthetic_slimfly_DEPENDENCIES) src/network-workloads/$(am__dirstamp)
	@rm -f src/network-workloads/model-net-synthetic-slimfly$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(src_network_workloads_model_net_synthetic_slimfly_OBJECTS) $(src_network_workloads_model_net_synthetic_slimfly_LDADD) $(LIBS)
src/networks/model-net/topology-test.$(OBJEXT):  \
	src/networks/model-net/$(am__dirstamp) \
	src/networks/model-net/$(DEPDIR)/$(am__dirstamp)

src/networks/model-net/topology-test$(EXEEXT): $(src_networks_model_net_topology_test_OBJECTS) $(src_networks_model_net_topology_test_DEPENDENCIES) $(EXTRA_src_networks_model_net_topology_test_DEPENDENCIES) src/networks/model-net/$(am__dirstamp)
	@rm -f src/networks/model-net/topology-test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(src_networks_model_net_topology_test_OBJECTS) $(src_networks_model_net_topology_test_LDADD) $(LIBS)
src/util/templates/$(am__dirstamp):
	@$(MKDIR_P) src/util/templates
	@: > src/util/templates/$(am__dirstamp)
src/util/templates/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/util/templates/$(DEPDIR)
	@: > src/util/templates/$(DEPDIR)/$(am__dirstamp)
src/util/templates/lp_template_dummy_main.$(OBJEXT):  \
	src/util/templates/$(am__dirstamp) \
	src/util/templates/$(DEPDIR)/$(am__dirstamp)
src/util/templates/lp_template.$(OBJEXT):  \
	src/util/templates/$(am__dirstamp) \
	src/util/templates/$(DEPDIR)/$(am__dirstamp)

src/util/templates/lp_template_dummy_main$(EXEEXT): $(src_util_templates_lp_template_dummy_main_OBJECTS) $(src_util_templates_lp_template_dummy_main_DEPENDENCIES) $(EXTRA_src_util_templates_lp_template_dummy_main_DEPENDENCIES) src/util/templates/$(am__dirstamp)
	@rm -f src/util/templates/lp_template_dummy_main$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(src_util_templates_lp_template_dummy_main_OBJECTS) $(src_util_templates_lp_template_dummy_main_LDADD) $(LIBS)
src/workload/codes-workload-dump.$(OBJEXT):  \
	src/workload/$(am__dirstamp) \
	src/workload/$(DEPDIR)/$(am__dirstamp)

src/workload/codes-workload-dump$(EXEEXT): $(src_workload_codes_workload_dump_OBJECTS) $(src_workload_codes_workload_dump_DEPENDENCIES) $(EXTRA_src_workload_codes_workload_dump_DEPENDENCIES) src/workload/$(am__dirstamp)
	@rm -f src/workload/codes-workload-dump$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(src_workload_codes_workload_dump_OBJECTS) $(src_workload_codes_workload_dump_LDADD) $(LIBS)
tests/$(am__dirstamp):
	@$(MKDIR_P) tests
	@: > tests/$(am__dirstamp)
tests/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) tests/$(DEPDIR)
	@: > tests/$(DEPDIR)/$(am__dirstamp)
tests/concurrent-msg-recv.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/concurrent-msg-recv$(EXEEXT): $(tests_concurrent_msg_recv_OBJECTS) $(tests_concurrent_msg_recv_DEPENDENCIES) $(EXTRA_tests_concurrent_msg_recv_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/concurrent-msg-recv$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_concurrent_msg_recv_OBJECTS) $(tests_concurrent_msg_recv_LDADD) $(LIBS)
tests/jobmap-test.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/jobmap-test$(EXEEXT): $(tests_jobmap_test_OBJECTS) $(tests_jobmap_test_DEPENDENCIES) $(EXTRA_tests_jobmap_test_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/jobmap-test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_jobmap_test_OBJECTS) $(tests_jobmap_test_LDADD) $(LIBS)
tests/lp-io-test.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/lp-io-test$(EXEEXT): $(tests_lp_io_test_OBJECTS) $(tests_lp_io_test_DEPENDENCIES) $(EXTRA_tests_lp_io_test_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/lp-io-test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_lp_io_test_OBJECTS) $(tests_lp_io_test_LDADD) $(LIBS)
tests/local-storage-model-test.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/lsm-test$(EXEEXT): $(tests_lsm_test_OBJECTS) $(tests_lsm_test_DEPENDENCIES) $(EXTRA_tests_lsm_test_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/lsm-test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_lsm_test_OBJECTS) $(tests_lsm_test_LDADD) $(LIBS)
tests/map-ctx-test.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/map-ctx-test$(EXEEXT): $(tests_map_ctx_test_OBJECTS) $(tests_map_ctx_test_DEPENDENCIES) $(EXTRA_tests_map_ctx_test_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/map-ctx-test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_map_ctx_test_OBJECTS) $(tests_map_ctx_test_LDADD) $(LIBS)
tests/mapping_test.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/mapping_test$(EXEEXT): $(tests_mapping_test_OBJECTS) $(tests_mapping_test_DEPENDENCIES) $(EXTRA_tests_mapping_test_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/mapping_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_mapping_test_OBJECTS) $(tests_mapping_test_LDADD) $(LIBS)
tests/modelnet-p2p-bw.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/modelnet-p2p-bw$(EXEEXT): $(tests_modelnet_p2p_bw_OBJECTS) $(tests_modelnet_p2p_bw_DEPENDENCIES) $(EXTRA_tests_modelnet_p2p_bw_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/modelnet-p2p-bw$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_modelnet_p2p_bw_OBJECTS) $(tests_modelnet_p2p_bw_LDADD) $(LIBS)
tests/modelnet-prio-sched-test.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/modelnet-prio-sched-test$(EXEEXT): $(tests_modelnet_prio_sched_test_OBJECTS) $(tests_modelnet_prio_sched_test_DEPENDENCIES) $(EXTRA_tests_modelnet_prio_sched_test_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/modelnet-prio-sched-test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_modelnet_prio_sched_test_OBJECTS) $(tests_modelnet_prio_sched_test_LDADD) $(LIBS)
tests/modelnet-simplep2p-test.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/modelnet-simplep2p-test$(EXEEXT): $(tests_modelnet_simplep2p_test_OBJECTS) $(tests_modelnet_simplep2p_test_DEPENDENCIES) $(EXTRA_tests_modelnet_simplep2p_test_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/modelnet-simplep2p-test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_modelnet_simplep2p_test_OBJECTS) $(tests_modelnet_simplep2p_test_LDADD) $(LIBS)
tests/modelnet-test.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/modelnet-test$(EXEEXT): $(tests_modelnet_test_OBJECTS) $(tests_modelnet_test_DEPENDENCIES) $(EXTRA_tests_modelnet_test_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/modelnet-test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_modelnet_test_OBJECTS) $(tests_modelnet_test_LDADD) $(LIBS)
tests/modelnet-test-collective.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/modelnet-test-collective$(EXEEXT): $(tests_modelnet_test_collective_OBJECTS) $(tests_modelnet_test_collective_DEPENDENCIES) $(EXTRA_tests_modelnet_test_collective_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/modelnet-test-collective$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_modelnet_test_collective_OBJECTS) $(tests_modelnet_test_collective_LDADD) $(LIBS)
tests/modelnet-test-dragonfly.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/modelnet-test-dragonfly$(EXEEXT): $(tests_modelnet_test_dragonfly_OBJECTS) $(tests_modelnet_test_dragonfly_DEPENDENCIES) $(EXTRA_tests_modelnet_test_dragonfly_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/modelnet-test-dragonfly$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_modelnet_test_dragonfly_OBJECTS) $(tests_modelnet_test_dragonfly_LDADD) $(LIBS)
tests/rc-stack-test.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/rc-stack-test$(EXEEXT): $(tests_rc_stack_test_OBJECTS) $(tests_rc_stack_test_DEPENDENCIES) $(EXTRA_tests_rc_stack_test_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/rc-stack-test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_rc_stack_test_OBJECTS) $(tests_rc_stack_test_LDADD) $(LIBS)
tests/resource-test.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/resource-test$(EXEEXT): $(tests_resource_test_OBJECTS) $(tests_resource_test_DEPENDENCIES) $(EXTRA_tests_resource_test_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/resource-test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_resource_test_OBJECTS) $(tests_resource_test_LDADD) $(LIBS)
tests/workload/$(am__dirstamp):
	@$(MKDIR_P) tests/workload
	@: > tests/workload/$(am__dirstamp)
tests/workload/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) tests/workload/$(DEPDIR)
	@: > tests/workload/$(DEPDIR)/$(am__dirstamp)
tests/workload/codes-workload-mpi-replay.$(OBJEXT):  \
	tests/workload/$(am__dirstamp) \
	tests/workload/$(DEPDIR)/$(am__dirstamp)

tests/workload/codes-workload-mpi-replay$(EXEEXT): $(tests_workload_codes_workload_mpi_replay_OBJECTS) $(tests_workload_codes_workload_mpi_replay_DEPENDENCIES) $(EXTRA_tests_workload_codes_workload_mpi_replay_DEPENDENCIES) tests/workload/$(am__dirstamp)
	@rm -f tests/workload/codes-workload-mpi-replay$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_workload_codes_workload_mpi_replay_OBJECTS) $(tests_workload_codes_workload_mpi_replay_LDADD) $(LIBS)
tests/workload/codes-workload-test.$(OBJEXT):  \
	tests/workload/$(am__dirstamp) \
	tests/workload/$(DEPDIR)/$(am__dirstamp)
tests/workload/codes-workload-test-svr-lp.$(OBJEXT):  \
	tests/workload/$(am__dirstamp) \
	tests/workload/$(DEPDIR)/$(am__dirstamp)
tests/workload/codes-workload-test-cn-lp.$(OBJEXT):  \
	tests/workload/$(am__dirstamp) \
	tests/workload/$(DEPDIR)/$(am__dirstamp)

tests/workload/codes-workload-test$(EXEEXT): $(tests_workload_codes_workload_test_OBJECTS) $(tests_workload_codes_workload_test_DEPENDENCIES) $(EXTRA_tests_workload_codes_workload_test_DEPENDENCIES) tests/workload/$(am__dirstamp)
	@rm -f tests/workload/codes-workload-test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_workload_codes_workload_test_OBJECTS) $(tests_workload_codes_workload_test_LDADD) $(LIBS)
install-binSCRIPTS: $(bin_SCRIPTS)
	@$(NORMAL_INSTALL)
	@list='$(bin_SCRIPTS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-binSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_SCRIPTS)'; test -n "$(bindir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	dir='$(DESTDIR)$(bindir)'; $(am__uninstall_files_from_dir)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f doc/example/*.$(OBJEXT)
	-rm -f doc/example_heterogeneous/*.$(OBJEXT)
	-rm -f src/iokernellang/*.$(OBJEXT)
	-rm -f src/iokernellang/*.lo
	-rm -f src/modelconfig/*.$(OBJEXT)
	-rm -f src/modelconfig/*.lo
	-rm -f src/network-workloads/*.$(OBJEXT)
	-rm -f src/network-workloads/*.lo
	-rm -f src/network-workloads/archived/*.$(OBJEXT)
	-rm -f src/networks/model-net/*.$(OBJEXT)
	-rm -f src/networks/model-net/*.lo
	-rm -f src/networks/model-net/core/*.$(OBJEXT)
	-rm -f src/networks/model-net/core/*.lo
	-rm -f src/util/*.$(OBJEXT)
	-rm -f src/util/*.lo
	-rm -f src/util/jobmap-impl/*.$(OBJEXT)
	-rm -f src/util/jobmap-impl/*.lo
	-rm -f src/util/templates/*.$(OBJEXT)
	-rm -f src/workload/*.$(OBJEXT)
	-rm -f src/workload/*.lo
	-rm -f src/workload/methods/*.$(OBJEXT)
	-rm -f src/workload/methods/*.lo
	-rm -f tests/*.$(OBJEXT)
	-rm -f tests/workload/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include doc/example/$(DEPDIR)/example.Po
include doc/example/$(DEPDIR)/tutorial-synthetic-ping-pong.Po
include doc/example_heterogeneous/$(DEPDIR)/example.Po
include src/iokernellang/$(DEPDIR)/CodesKernelHelpers.Plo
include src/iokernellang/$(DEPDIR)/codesImpl.Plo
include src/iokernellang/$(DEPDIR)/codeslexer.Plo
include src/iokernellang/$(DEPDIR)/codesparser.Plo
include src/modelconfig/$(DEPDIR)/configfile.Plo
include src/modelconfig/$(DEPDIR)/configglue.Plo
include src/modelconfig/$(DEPDIR)/configlex.Plo
include src/modelconfig/$(DEPDIR)/configparser.Plo
include src/modelconfig/$(DEPDIR)/configstore.Plo
include src/modelconfig/$(DEPDIR)/configstoreadapter.Plo
include src/modelconfig/$(DEPDIR)/configuration.Plo
include src/modelconfig/$(DEPDIR)/txt_configfile.Plo
include src/network-workloads/$(DEPDIR)/model-net-dumpi-traces-dump.Po
include src/network-workloads/$(DEPDIR)/model-net-mpi-replay.Plo
include src/network-workloads/$(DEPDIR)/model-net-synthetic-dragonfly-all.Po
include src/network-workloads/$(DEPDIR)/model-net-synthetic-fattree.Po
include src/network-workloads/$(DEPDIR)/model-net-synthetic-slimfly.Po
include src/network-workloads/$(DEPDIR)/model-net-synthetic.Po
include src/network-workloads/$(DEPDIR)/src_network_workloads_model_net_mpi_replay-model-net-mpi-replay-main.Po
include src/network-workloads/$(DEPDIR)/src_network_workloads_model_net_mpi_replay-model-net-mpi-replay.Po
include src/network-workloads/archived/$(DEPDIR)/model-net-synthetic-custom-dfly.Po
include src/network-workloads/archived/$(DEPDIR)/model-net-synthetic-dally-dfly.Po
include src/network-workloads/archived/$(DEPDIR)/model-net-synthetic-dfly-plus.Po
include src/networks/model-net/$(DEPDIR)/common-net.Plo
include src/networks/model-net/$(DEPDIR)/dragonfly-custom.Plo
include src/networks/model-net/$(DEPDIR)/dragonfly-dally.Plo
include src/networks/model-net/$(DEPDIR)/dragonfly-plus.Plo
include src/networks/model-net/$(DEPDIR)/dragonfly.Plo
include src/networks/model-net/$(DEPDIR)/express-mesh.Plo
include src/networks/model-net/$(DEPDIR)/fattree.Plo
include src/networks/model-net/$(DEPDIR)/loggp.Plo
include src/networks/model-net/$(DEPDIR)/simplenet-upd.Plo
include src/networks/model-net/$(DEPDIR)/simplep2p.Plo
include src/networks/model-net/$(DEPDIR)/slimfly.Plo
include src/networks/model-net/$(DEPDIR)/topology-test.Po
include src/networks/model-net/$(DEPDIR)/torus.Plo
include src/networks/model-net/core/$(DEPDIR)/model-net-lp.Plo
include src/networks/model-net/core/$(DEPDIR)/model-net-sched-impl.Plo
include src/networks/model-net/core/$(DEPDIR)/model-net-sched.Plo
include src/networks/model-net/core/$(DEPDIR)/model-net.Plo
include src/util/$(DEPDIR)/codes-comm.Plo
include src/util/$(DEPDIR)/codes-jobmap.Plo
include src/util/$(DEPDIR)/codes-mapping-context.Plo
include src/util/$(DEPDIR)/codes_mapping.Plo
include src/util/$(DEPDIR)/connection-manager.Plo
include src/util/$(DEPDIR)/local-storage-model.Plo
include src/util/$(DEPDIR)/lookup3.Plo
include src/util/$(DEPDIR)/lp-io.Plo
include src/util/$(DEPDIR)/lp-msg.Plo
include src/util/$(DEPDIR)/lp-type-lookup.Plo
include src/util/$(DEPDIR)/rc-stack.Plo
include src/util/$(DEPDIR)/resource-lp.Plo
include src/util/$(DEPDIR)/resource.Plo
include src/util/jobmap-impl/$(DEPDIR)/jobmap-dummy.Plo
include src/util/jobmap-impl/$(DEPDIR)/jobmap-identity.Plo
include src/util/jobmap-impl/$(DEPDIR)/jobmap-list.Plo
include src/util/templates/$(DEPDIR)/lp_template.Po
include src/util/templates/$(DEPDIR)/lp_template_dummy_main.Po
include src/workload/$(DEPDIR)/codes-workload-dump.Po
include src/workload/$(DEPDIR)/codes-workload.Plo
include src/workload/methods/$(DEPDIR)/codes-checkpoint-wrkld.Plo
include src/workload/methods/$(DEPDIR)/codes-darshan3-io-wrkld.Plo
include src/workload/methods/$(DEPDIR)/codes-dumpi-trace-nw-wrkld.Plo
include src/workload/methods/$(DEPDIR)/codes-iolang-wrkld.Plo
include src/workload/methods/$(DEPDIR)/codes-iomock-wrkld.Plo
include src/workload/methods/$(DEPDIR)/codes-online-comm-wrkld.Plo
include src/workload/methods/$(DEPDIR)/codes-recorder-io-wrkld.Plo
include src/workload/methods/$(DEPDIR)/test-workload-method.Plo
include tests/$(DEPDIR)/concurrent-msg-recv.Po
include tests/$(DEPDIR)/jobmap-test.Po
include tests/$(DEPDIR)/local-storage-model-test.Po
include tests/$(DEPDIR)/lp-io-test.Po
include tests/$(DEPDIR)/map-ctx-test.Po
include tests/$(DEPDIR)/mapping_test.Po
include tests/$(DEPDIR)/modelnet-p2p-bw.Po
include tests/$(DEPDIR)/modelnet-prio-sched-test.Po
include tests/$(DEPDIR)/modelnet-simplep2p-test.Po
include tests/$(DEPDIR)/modelnet-test-collective.Po
include tests/$(DEPDIR)/modelnet-test-dragonfly.Po
include tests/$(DEPDIR)/modelnet-test.Po
include tests/$(DEPDIR)/rc-stack-test.Po
include tests/$(DEPDIR)/resource-test.Po
include tests/workload/$(DEPDIR)/codes-workload-mpi-replay.Po
include tests/workload/$(DEPDIR)/codes-workload-test-cn-lp.Po
include tests/workload/$(DEPDIR)/codes-workload-test-svr-lp.Po
include tests/workload/$(DEPDIR)/codes-workload-test.Po

.C.o:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.C.obj:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.C.lo:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

.c.o:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

src/network-workloads/src_network_workloads_model_net_mpi_replay-model-net-mpi-replay.o: src/network-workloads/model-net-mpi-replay.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_network_workloads_model_net_mpi_replay_CFLAGS) $(CFLAGS) -MT src/network-workloads/src_network_workloads_model_net_mpi_replay-model-net-mpi-replay.o -MD -MP -MF src/network-workloads/$(DEPDIR)/src_network_workloads_model_net_mpi_replay-model-net-mpi-replay.Tpo -c -o src/network-workloads/src_network_workloads_model_net_mpi_replay-model-net-mpi-replay.o `test -f 'src/network-workloads/model-net-mpi-replay.c' || echo '$(srcdir)/'`src/network-workloads/model-net-mpi-replay.c
	$(AM_V_at)$(am__mv) src/network-workloads/$(DEPDIR)/src_network_workloads_model_net_mpi_replay-model-net-mpi-replay.Tpo src/network-workloads/$(DEPDIR)/src_network_workloads_model_net_mpi_replay-model-net-mpi-replay.Po
#	$(AM_V_CC)source='src/network-workloads/model-net-mpi-replay.c' object='src/network-workloads/src_network_workloads_model_net_mpi_replay-model-net-mpi-replay.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_network_workloads_model_net_mpi_replay_CFLAGS) $(CFLAGS) -c -o src/network-workloads/src_network_workloads_model_net_mpi_replay-model-net-mpi-replay.o `test -f 'src/network-workloads/model-net-mpi-replay.c' || echo '$(srcdir)/'`src/network-workloads/model-net-mpi-replay.c

src/network-workloads/src_network_workloads_model_net_mpi_replay-model-net-mpi-replay.obj: src/network-workloads/model-net-mpi-replay.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_network_workloads_model_net_mpi_replay_CFLAGS) $(CFLAGS) -MT src/network-workloads/src_network_workloads_model_net_mpi_replay-model-net-mpi-replay.obj -MD -MP -MF src/network-workloads/$(DEPDIR)/src_network_workloads_model_net_mpi_replay-model-net-mpi-replay.Tpo -c -o src/network-workloads/src_network_workloads_model_net_mpi_replay-model-net-mpi-replay.obj `if test -f 'src/network-workloads/model-net-mpi-replay.c'; then $(CYGPATH_W) 'src/network-workloads/model-net-mpi-replay.c'; else $(CYGPATH_W) '$(srcdir)/src/network-workloads/model-net-mpi-replay.c'; fi`
	$(AM_V_at)$(am__mv) src/network-workloads/$(DEPDIR)/src_network_workloads_model_net_mpi_replay-model-net-mpi-replay.Tpo src/network-workloads/$(DEPDIR)/src_network_workloads_model_net_mpi_replay-model-net-mpi-replay.Po
#	$(AM_V_CC)source='src/network-workloads/model-net-mpi-replay.c' object='src/network-workloads/src_network_workloads_model_net_mpi_replay-model-net-mpi-replay.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_network_workloads_model_net_mpi_replay_CFLAGS) $(CFLAGS) -c -o src/network-workloads/src_network_workloads_model_net_mpi_replay-model-net-mpi-replay.obj `if test -f 'src/network-workloads/model-net-mpi-replay.c'; then $(CYGPATH_W) 'src/network-workloads/model-net-mpi-replay.c'; else $(CYGPATH_W) '$(srcdir)/src/network-workloads/model-net-mpi-replay.c'; fi`

src/network-workloads/src_network_workloads_model_net_mpi_replay-model-net-mpi-replay-main.o: src/network-workloads/model-net-mpi-replay-main.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_network_workloads_model_net_mpi_replay_CFLAGS) $(CFLAGS) -MT src/network-workloads/src_network_workloads_model_net_mpi_replay-model-net-mpi-replay-main.o -MD -MP -MF src/network-workloads/$(DEPDIR)/src_network_workloads_model_net_mpi_replay-model-net-mpi-replay-main.Tpo -c -o src/network-workloads/src_network_workloads_model_net_mpi_replay-model-net-mpi-replay-main.o `test -f 'src/network-workloads/model-net-mpi-replay-main.c' || echo '$(srcdir)/'`src/network-workloads/model-net-mpi-replay-main.c
	$(AM_V_at)$(am__mv) src/network-workloads/$(DEPDIR)/src_network_workloads_model_net_mpi_replay-model-net-mpi-replay-main.Tpo src/network-workloads/$(DEPDIR)/src_network_workloads_model_net_mpi_replay-model-net-mpi-replay-main.Po
#	$(AM_V_CC)source='src/network-workloads/model-net-mpi-replay-main.c' object='src/network-workloads/src_network_workloads_model_net_mpi_replay-model-net-mpi-replay-main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_network_workloads_model_net_mpi_replay_CFLAGS) $(CFLAGS) -c -o src/network-workloads/src_network_workloads_model_net_mpi_replay-model-net-mpi-replay-main.o `test -f 'src/network-workloads/model-net-mpi-replay-main.c' || echo '$(srcdir)/'`src/network-workloads/model-net-mpi-replay-main.c

src/network-workloads/src_network_workloads_model_net_mpi_replay-model-net-mpi-replay-main.obj: src/network-workloads/model-net-mpi-replay-main.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_network_workloads_model_net_mpi_replay_CFLAGS) $(CFLAGS) -MT src/network-workloads/src_network_workloads_model_net_mpi_replay-model-net-mpi-replay-main.obj -MD -MP -MF src/network-workloads/$(DEPDIR)/src_network_workloads_model_net_mpi_replay-model-net-mpi-replay-main.Tpo -c -o src/network-workloads/src_network_workloads_model_net_mpi_replay-model-net-mpi-replay-main.obj `if test -f 'src/network-workloads/model-net-mpi-replay-main.c'; then $(CYGPATH_W) 'src/network-workloads/model-net-mpi-replay-main.c'; else $(CYGPATH_W) '$(srcdir)/src/network-workloads/model-net-mpi-replay-main.c'; fi`
	$(AM_V_at)$(am__mv) src/network-workloads/$(DEPDIR)/src_network_workloads_model_net_mpi_replay-model-net-mpi-replay-main.Tpo src/network-workloads/$(DEPDIR)/src_network_workloads_model_net_mpi_replay-model-net-mpi-replay-main.Po
#	$(AM_V_CC)source='src/network-workloads/model-net-mpi-replay-main.c' object='src/network-workloads/src_network_workloads_model_net_mpi_replay-model-net-mpi-replay-main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_network_workloads_model_net_mpi_replay_CFLAGS) $(CFLAGS) -c -o src/network-workloads/src_network_workloads_model_net_mpi_replay-model-net-mpi-replay-main.obj `if test -f 'src/network-workloads/model-net-mpi-replay-main.c'; then $(CYGPATH_W) 'src/network-workloads/model-net-mpi-replay-main.c'; else $(CYGPATH_W) '$(srcdir)/src/network-workloads/model-net-mpi-replay-main.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf doc/example/.libs doc/example/_libs
	-rm -rf doc/example_heterogeneous/.libs doc/example_heterogeneous/_libs
	-rm -rf src/.libs src/_libs
	-rm -rf src/iokernellang/.libs src/iokernellang/_libs
	-rm -rf src/modelconfig/.libs src/modelconfig/_libs
	-rm -rf src/network-workloads/.libs src/network-workloads/_libs
	-rm -rf src/network-workloads/archived/.libs src/network-workloads/archived/_libs
	-rm -rf src/networks/model-net/.libs src/networks/model-net/_libs
	-rm -rf src/networks/model-net/core/.libs src/networks/model-net/core/_libs
	-rm -rf src/util/.libs src/util/_libs
	-rm -rf src/util/jobmap-impl/.libs src/util/jobmap-impl/_libs
	-rm -rf src/util/templates/.libs src/util/templates/_libs
	-rm -rf src/workload/.libs src/workload/_libs
	-rm -rf src/workload/methods/.libs src/workload/methods/_libs
	-rm -rf tests/.libs tests/_libs
	-rm -rf tests/workload/.libs tests/workload/_libs

distclean-libtool:
	-rm -f libtool config.lt
install-pkgconfigDATA: $(pkgconfig_DATA)
	@$(NORMAL_INSTALL)
	@list='$(pkgconfig_DATA)'; test -n "$(pkgconfigdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgconfigdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgconfigdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pkgconfigdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pkgconfigdir)" || exit $$?; \
	done

uninstall-pkgconfigDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(pkgconfig_DATA)'; test -n "$(pkgconfigdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkgconfigdir)'; $(am__uninstall_files_from_dir)
install-nobase_includeHEADERS: $(nobase_include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(nobase_include_HEADERS)'; test -n "$(includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(includedir)" || exit 1; \
	fi; \
	$(am__nobase_list) | while read dir files; do \
	  xfiles=; for file in $$files; do \
	    if test -f "$$file"; then xfiles="$$xfiles $$file"; \
	    else xfiles="$$xfiles $(srcdir)/$$file"; fi; done; \
	  test -z "$$xfiles" || { \
	    test "x$$dir" = x. || { \
	      echo " $(MKDIR_P) '$(DESTDIR)$(includedir)/$$dir'"; \
	      $(MKDIR_P) "$(DESTDIR)$(includedir)/$$dir"; }; \
	    echo " $(INSTALL_HEADER) $$xfiles '$(DESTDIR)$(includedir)/$$dir'"; \
	    $(INSTALL_HEADER) $$xfiles "$(DESTDIR)$(includedir)/$$dir" || exit $$?; }; \
	done

uninstall-nobase_includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(nobase_include_HEADERS)'; test -n "$(includedir)" || list=; \
	$(am__nobase_strip_setup); files=`$(am__nobase_strip)`; \
	dir='$(DESTDIR)$(includedir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscope: cscope.files
	test ! -s cscope.files \
	  || $(CSCOPE) -b -q $(AM_CSCOPEFLAGS) $(CSCOPEFLAGS) -i cscope.files $(CSCOPE_ARGS)
clean-cscope:
	-rm -f cscope.files
cscope.files: clean-cscope cscopelist
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
	-rm -f cscope.out cscope.in.out cscope.po.out cscope.files

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	else \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS:
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_PROGRAMS)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
tests/lp-io-test.sh.log: tests/lp-io-test.sh
	@p='tests/lp-io-test.sh'; \
	b='tests/lp-io-test.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/workload/codes-workload-test.sh.log: tests/workload/codes-workload-test.sh
	@p='tests/workload/codes-workload-test.sh'; \
	b='tests/workload/codes-workload-test.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/mapping_test.sh.log: tests/mapping_test.sh
	@p='tests/mapping_test.sh'; \
	b='tests/mapping_test.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/lsm-test.sh.log: tests/lsm-test.sh
	@p='tests/lsm-test.sh'; \
	b='tests/lsm-test.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/rc-stack-test.log: tests/rc-stack-test$(EXEEXT)
	@p='tests/rc-stack-test$(EXEEXT)'; \
	b='tests/rc-stack-test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/resource-test.sh.log: tests/resource-test.sh
	@p='tests/resource-test.sh'; \
	b='tests/resource-test.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/jobmap-test.sh.log: tests/jobmap-test.sh
	@p='tests/jobmap-test.sh'; \
	b='tests/jobmap-test.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/map-ctx-test.sh.log: tests/map-ctx-test.sh
	@p='tests/map-ctx-test.sh'; \
	b='tests/map-ctx-test.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/modelnet-test.sh.log: tests/modelnet-test.sh
	@p='tests/modelnet-test.sh'; \
	b='tests/modelnet-test.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/modelnet-test-torus.sh.log: tests/modelnet-test-torus.sh
	@p='tests/modelnet-test-torus.sh'; \
	b='tests/modelnet-test-torus.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/modelnet-test-loggp.sh.log: tests/modelnet-test-loggp.sh
	@p='tests/modelnet-test-loggp.sh'; \
	b='tests/modelnet-test-loggp.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/modelnet-test-dragonfly.sh.log: tests/modelnet-test-dragonfly.sh
	@p='tests/modelnet-test-dragonfly.sh'; \
	b='tests/modelnet-test-dragonfly.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/modelnet-test-em.sh.log: tests/modelnet-test-em.sh
	@p='tests/modelnet-test-em.sh'; \
	b='tests/modelnet-test-em.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/modelnet-test-slimfly.sh.log: tests/modelnet-test-slimfly.sh
	@p='tests/modelnet-test-slimfly.sh'; \
	b='tests/modelnet-test-slimfly.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/modelnet-test-dragonfly-synthetic.sh.log: tests/modelnet-test-dragonfly-synthetic.sh
	@p='tests/modelnet-test-dragonfly-synthetic.sh'; \
	b='tests/modelnet-test-dragonfly-synthetic.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/modelnet-test-dragonfly-custom-synthetic.sh.log: tests/modelnet-test-dragonfly-custom-synthetic.sh
	@p='tests/modelnet-test-dragonfly-custom-synthetic.sh'; \
	b='tests/modelnet-test-dragonfly-custom-synthetic.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/modelnet-test-dragonfly-plus-synthetic.sh.log: tests/modelnet-test-dragonfly-plus-synthetic.sh
	@p='tests/modelnet-test-dragonfly-plus-synthetic.sh'; \
	b='tests/modelnet-test-dragonfly-plus-synthetic.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/modelnet-test-dragonfly-dally-synthetic.sh.log: tests/modelnet-test-dragonfly-dally-synthetic.sh
	@p='tests/modelnet-test-dragonfly-dally-synthetic.sh'; \
	b='tests/modelnet-test-dragonfly-dally-synthetic.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/modelnet-test-fattree-synthetic.sh.log: tests/modelnet-test-fattree-synthetic.sh
	@p='tests/modelnet-test-fattree-synthetic.sh'; \
	b='tests/modelnet-test-fattree-synthetic.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/modelnet-test-slimfly-synthetic.sh.log: tests/modelnet-test-slimfly-synthetic.sh
	@p='tests/modelnet-test-slimfly-synthetic.sh'; \
	b='tests/modelnet-test-slimfly-synthetic.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/modelnet-p2p-bw-loggp.sh.log: tests/modelnet-p2p-bw-loggp.sh
	@p='tests/modelnet-p2p-bw-loggp.sh'; \
	b='tests/modelnet-p2p-bw-loggp.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/modelnet-prio-sched-test.sh.log: tests/modelnet-prio-sched-test.sh
	@p='tests/modelnet-prio-sched-test.sh'; \
	b='tests/modelnet-prio-sched-test.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/workload/darshan-dump.sh.log: tests/workload/darshan-dump.sh
	@p='tests/workload/darshan-dump.sh'; \
	b='tests/workload/darshan-dump.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/modelnet-test-dragonfly-traces.sh.log: tests/modelnet-test-dragonfly-traces.sh
	@p='tests/modelnet-test-dragonfly-traces.sh'; \
	b='tests/modelnet-test-dragonfly-traces.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/modelnet-test-dragonfly-custom-traces.sh.log: tests/modelnet-test-dragonfly-custom-traces.sh
	@p='tests/modelnet-test-dragonfly-custom-traces.sh'; \
	b='tests/modelnet-test-dragonfly-custom-traces.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/modelnet-test-slimfly-traces.sh.log: tests/modelnet-test-slimfly-traces.sh
	@p='tests/modelnet-test-slimfly-traces.sh'; \
	b='tests/modelnet-test-slimfly-traces.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/modelnet-test-torus-traces.sh.log: tests/modelnet-test-torus-traces.sh
	@p='tests/modelnet-test-torus-traces.sh'; \
	b='tests/modelnet-test-torus-traces.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
#.test$(EXEEXT).log:
#	@p='$<'; \
#	$(am__set_b); \
#	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
#	--log-file $$b.log --trs-file $$b.trs \
#	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
#	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__post_remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2
	$(am__post_remove_distdir)

dist-lzip: distdir
	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz
	$(am__post_remove_distdir)

dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz
	$(am__post_remove_distdir)

dist-tarZ: distdir
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__post_remove_distdir)

dist-shar: distdir
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__post_remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__post_remove_distdir)

dist dist-all:
	$(MAKE) $(AM_MAKEFLAGS) $(DIST_TARGETS) am__post_remove_distdir='@:'
	$(am__post_remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lz*) \
	  lzip -dc $(distdir).tar.lz | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir)
	chmod u+w $(distdir)
	mkdir $(distdir)/_build $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build \
	  && ../configure --srcdir=.. --prefix="$$dc_install_base" \
	    $(AM_DISTCHECK_CONFIGURE_FLAGS) \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__post_remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@test -n '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: trying to run $@ with an empty' \
	       '$$(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	$(am__cd) '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: cannot chdir into $(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	test `$(am__distuninstallcheck_listfiles) | wc -l` -eq 0 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LIBRARIES) $(LTLIBRARIES) $(PROGRAMS) $(SCRIPTS) \
		$(DATA) $(HEADERS) codes_config.h
install-binPROGRAMS: install-libLTLIBRARIES

installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(pkgconfigdir)" "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f doc/example/$(DEPDIR)/$(am__dirstamp)
	-rm -f doc/example/$(am__dirstamp)
	-rm -f doc/example_heterogeneous/$(DEPDIR)/$(am__dirstamp)
	-rm -f doc/example_heterogeneous/$(am__dirstamp)
	-rm -f src/$(am__dirstamp)
	-rm -f src/iokernellang/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/iokernellang/$(am__dirstamp)
	-rm -f src/modelconfig/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/modelconfig/$(am__dirstamp)
	-rm -f src/network-workloads/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/network-workloads/$(am__dirstamp)
	-rm -f src/network-workloads/archived/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/network-workloads/archived/$(am__dirstamp)
	-rm -f src/networks/model-net/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/networks/model-net/$(am__dirstamp)
	-rm -f src/networks/model-net/core/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/networks/model-net/core/$(am__dirstamp)
	-rm -f src/util/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/util/$(am__dirstamp)
	-rm -f src/util/jobmap-impl/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/util/jobmap-impl/$(am__dirstamp)
	-rm -f src/util/templates/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/util/templates/$(am__dirstamp)
	-rm -f src/workload/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/workload/$(am__dirstamp)
	-rm -f src/workload/methods/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/workload/methods/$(am__dirstamp)
	-rm -f tests/$(DEPDIR)/$(am__dirstamp)
	-rm -f tests/$(am__dirstamp)
	-rm -f tests/workload/$(DEPDIR)/$(am__dirstamp)
	-rm -f tests/workload/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-binPROGRAMS clean-checkPROGRAMS clean-generic \
	clean-libLTLIBRARIES clean-libtool clean-noinstLIBRARIES \
	clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf doc/example/$(DEPDIR) doc/example_heterogeneous/$(DEPDIR) src/iokernellang/$(DEPDIR) src/modelconfig/$(DEPDIR) src/network-workloads/$(DEPDIR) src/network-workloads/archived/$(DEPDIR) src/networks/model-net/$(DEPDIR) src/networks/model-net/core/$(DEPDIR) src/util/$(DEPDIR) src/util/jobmap-impl/$(DEPDIR) src/util/templates/$(DEPDIR) src/workload/$(DEPDIR) src/workload/methods/$(DEPDIR) tests/$(DEPDIR) tests/workload/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-nobase_includeHEADERS install-pkgconfigDATA

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-binSCRIPTS \
	install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf doc/example/$(DEPDIR) doc/example_heterogeneous/$(DEPDIR) src/iokernellang/$(DEPDIR) src/modelconfig/$(DEPDIR) src/network-workloads/$(DEPDIR) src/network-workloads/archived/$(DEPDIR) src/networks/model-net/$(DEPDIR) src/networks/model-net/core/$(DEPDIR) src/util/$(DEPDIR) src/util/jobmap-impl/$(DEPDIR) src/util/templates/$(DEPDIR) src/workload/$(DEPDIR) src/workload/methods/$(DEPDIR) tests/$(DEPDIR) tests/workload/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic \
	maintainer-clean-local

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-binSCRIPTS \
	uninstall-libLTLIBRARIES uninstall-nobase_includeHEADERS \
	uninstall-pkgconfigDATA

.MAKE: all check check-am install install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--refresh check check-TESTS \
	check-am clean clean-binPROGRAMS clean-checkPROGRAMS \
	clean-cscope clean-generic clean-libLTLIBRARIES clean-libtool \
	clean-noinstLIBRARIES clean-noinstPROGRAMS cscope \
	cscopelist-am ctags ctags-am dist dist-all dist-bzip2 \
	dist-gzip dist-lzip dist-shar dist-tarZ dist-xz dist-zip \
	distcheck distclean distclean-compile distclean-generic \
	distclean-hdr distclean-libtool distclean-tags distcleancheck \
	distdir distuninstallcheck dvi dvi-am html html-am info \
	info-am install install-am install-binPROGRAMS \
	install-binSCRIPTS install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am \
	install-libLTLIBRARIES install-man \
	install-nobase_includeHEADERS install-pdf install-pdf-am \
	install-pkgconfigDATA install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic maintainer-clean-local mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am recheck tags tags-am uninstall \
	uninstall-am uninstall-binPROGRAMS uninstall-binSCRIPTS \
	uninstall-libLTLIBRARIES uninstall-nobase_includeHEADERS \
	uninstall-pkgconfigDATA

$(pkgconfig_DATA): config.status

# flex & bison deps
#
%.c %.h: %.l
	$(AM_V_GEN)$(LEX) --header-file=$(@:.c=.h) -o $(@:.h=.c) $< \
	   || ( $(RM) $(basename $@).h $(basename $@).c ; exit 1) 

# 
# specific rule for codesparser generation; we want the header to land in
# the codes/ directory because it will be installed for use by other repos
#src/iokernellang/codesparser.c codes/codesparser.h: src/iokernellang/codesparser.y
#	mkdir -p codes
#	@test "x$(bison_ok)" != "yes" || echo "*** WARNING *** Bison version might be too old"
#	$(AM_V_GEN)$(YACC) --defines=codes/codesparser.h -o src/iokernellang/codesparser.c  $< \
#	   || ( $(RM) $(basename $@).h $(basename $@).c ; exit 1)

%.c %.h: %.y
	@test "x$(bison_ok)" != "yes" || echo "*** WARNING *** Bison version might be too old"
	$(AM_V_GEN)$(YACC) --defines=$(@:.c=.h) -o $(@:.h=.c)  $< \
	   || ( $(RM) $(basename $@).h $(basename $@).c ; exit 1)

# %.y: %.y.in Makefile
#	$(AM_V_GEN)$(SED) -e 's,[@]CODES_PURE_PARSER_DEFINES[@],$(CODES_PURE_PARSER_DEFINES),g' \
#	-e 's,[@]CODES_PUSH_PARSER_DEFINES[@],$(CODES_PUSH_PARSER_DEFINES),g' \
#	< src/common/iokernellang/codesparser.y.in > src/common/iokernellang/codesparser.y

#
# Output dist version
#
.phony: distversion
distversion:
	@echo $(VERSION)

#
# Easy way to build unit tests without running them
# 
.phony: tests
tests: $(check_PROGRAMS)

.PHONY: scriptdir
# need to ensure that the scripts directory exists before running the sub cmd
scriptdir:
	test -d scripts || mkdir scripts

%: %.py.in Makefile scriptdir
	$(do_subst) < $< > $@
	chmod +x $@

scripts/_configurator.py: scripts/configurator.py
	cp $^ $@

# install hook for configurator utility lib
# TODO: actually use the install program, use more of a 'standard' approach
#install-data-local:
#install -m 644 $(top_srcdir)/scripts/configurator.py $(libdir)
#uninstall-local:
#rm -f $(libdir)/configurator.py

#src/network-workload/README
#src/network-workload/offsets
#src/network-workload/scala-trace-data

PHONY: maintainer-clean-local
maintainer-clean-local::
	-rm -f src/modelconfig/configlex.h
	-rm -f src/modelconfig/configlex.c
	-rm -f src/modelconfig/configparser.h
	-rm -f src/modelconfig/configparser.c

src/modelconfig/configparser.h: src/modelconfig/configparser.y
src/modelconfig/configlex.h: src/modelconfig/configlex.l

#bin_PROGRAMS += src/network-workload/codes-nw-test

#src_network_workload_codes_nw_test_SOURCES = \
# #src/network-workload/codes-nw-test.c
#src_network_workload_codes_nw_test_LDADD = $(testlib) ${ROSS_LIBS} ${DUMPI_LIBS}
#src_network_workload_codes_nw_test_LDFLAGS =  ${ROSS_LDFLAGS}

#bin_PROGRAMS += src/network-workload/codes-dumpi-wrkld

#src_network_workload_codes_dumpi_wrkld_SOURCES = \
# src/network-workload/codes-dumpi-wrkld.c
#src_network_workload_codes_dumpi_wrkld_LDADD = $(testlib) ${ROSS_LIBS} ${DUMPI_LIBS}
#src_network_workload_codes_dumpi_wrkld_LDFLAGS =  ${ROSS_LDFLAGS}

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
